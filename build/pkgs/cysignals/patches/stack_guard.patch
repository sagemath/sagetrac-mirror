commit 3d0449db42daf59e0e1a8910ce72c539a3c1d9d5
Author: Jeroen Demeyer <jdemeyer@cage.ugent.be>
Date:   Tue Apr 10 12:00:10 2018 +0200

    Add stack guard in _sig_on_trampoline()

diff --git a/src/cysignals/implementation.c b/src/cysignals/implementation.c
index d751aae..7294769 100644
--- a/src/cysignals/implementation.c
+++ b/src/cysignals/implementation.c
@@ -260,14 +260,24 @@ static void* _sig_on_trampoline(void* dummy)
 {
     register int sig;
 
+    /* Reserve some unused stack space to prevent pthread_exit() from
+     * clobbering the stack that we care about. This is in particular
+     * needed on certain older GNU/Linux systems:
+     * https://trac.sagemath.org/ticket/25092#comment:6 */
+    char stack_guard[2048];
+
     if (cysetjmp(trampoline_setup) == 0)
-        pthread_exit(NULL);
+        /* The argument to pthread_exit() does not matter. We use
+         * stack_guard to prevent GCC from optimizing away the
+         * stack_guard variable. */
+        pthread_exit(stack_guard);
 
     sig = sigsetjmp(trampoline, 1);
     reset_CPU();
     cylongjmp(cysigs.env, sig);
 }
 
+
 static void setup_trampoline(void)
 {
     pthread_t child;
