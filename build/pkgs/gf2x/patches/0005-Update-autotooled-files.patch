From 47346168fa6cf5253a609bea19022a8ee03e0b0f Mon Sep 17 00:00:00 2001
From: Erik Massop <e.massop@hccnet.nl>
Date: Thu, 19 Jun 2014 02:16:52 +0200
Subject: [PATCH 5/5] Update autotooled files

---
 Makefile.in           |   2 +-
 configure             | 434 ++++++++++++++++++++++++++++++++++++--------------
 gf2x/gf2x-config.h.in |   2 +-
 3 files changed, 314 insertions(+), 124 deletions(-)

diff --git a/Makefile.in b/Makefile.in
index 8558d7a..73f1014 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -325,7 +325,7 @@ nobase_nodist_include_HEADERS = \
 		gf2x/gf2x_mul8.h		\
 		gf2x/gf2x_mul9.h
 
-libgf2x_la_LDFLAGS = -version-info @gf2x_lib_version@
+libgf2x_la_LDFLAGS = -version-info @gf2x_lib_version@ -no-undefined
 @ENABLE_NTL_CHECKS_TRUE@MAYBE_APPS = apps
 SUBDIRS = . tests src $(MAYBE_APPS)
 DIST_SUBDIRS = tests src apps
diff --git a/configure b/configure
index ac84e22..251b8b5 100755
--- a/configure
+++ b/configure
@@ -756,6 +756,7 @@ with_gnu_ld
 with_sysroot
 enable_libtool_lock
 enable_ntl_checks
+enable_hardware_specific_code
 enable_sse2
 enable_pclmul
 with_compile_warnings
@@ -1403,6 +1404,9 @@ Optional Features:
   --enable-dependency-tracking   do not reject slow dependency extractors
   --disable-libtool-lock  avoid locking (might break parallel builds)
   --enable-ntl-checks     Turn on ntl checks
+  --enable-hardware-specific-code
+                          Turn on all cpu-dependent optimized code (default is
+                          yes)
   --enable-sse2           Turn on sse-2 code (default is yes)
   --enable-pclmul         Turn on pclmul code (default is yes)
 
@@ -11513,6 +11517,15 @@ if test "${enable_ntl_checks+set}" = set; then :
   enableval=$enable_ntl_checks;
 fi
 
+
+# Check whether --enable-hardware-specific-code was given.
+if test "${enable_hardware_specific_code+set}" = set; then :
+  enableval=$enable_hardware_specific_code;
+else
+  enable_hardware_specific_code=yes
+fi
+
+
 # Check whether --enable-sse2 was given.
 if test "${enable_sse2+set}" = set; then :
   enableval=$enable_sse2;
@@ -16339,8 +16352,8 @@ GF2X_WORDSIZE=$gf2x_wordsize
 
 
  ac_save_CFLAGS=$CFLAGS
- { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC can compile and run sse-2 code" >&5
-$as_echo_n "checking whether $CC can compile and run sse-2 code... " >&6; }
+ { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC can compile sse-2 code" >&5
+$as_echo_n "checking whether $CC can compile sse-2 code... " >&6; }
 if ${gf2x_cv_cc_supports_sse2+:} false; then :
   $as_echo_n "(cached) " >&6
 else
@@ -16349,42 +16362,56 @@ else
   if test "x${enable_sse2}" = xno ; then
    echo $ECHO_N "explicitly disabled, "
   else
-   if test "$cross_compiling" = yes; then :
-  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
-as_fn_error $? "cannot run test program while cross compiling
-See \`config.log' for more details" "$LINENO" 5; }
-else
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
 #include <emmintrin.h>
-__v2di x;
-int main() {}
+__v2di x;       /* Our code currently uses these, but it should not */
+int main(int argc, char * argv) {
+     __m128i foo = _mm_setr_epi32(argc, argc + 1, argc + 2, argc + 3);
+     __m128i bar = _mm_setr_epi32(argc + 3, argc + 2, argc + 1, argc);
+    foo = _mm_mullo_epi16(foo, bar);
+    foo = _mm_slli_epi64(foo, 1);
+    foo = _mm_xor_si128(bar, _mm_unpacklo_epi32 (foo, bar));
+    foo = _mm_srli_epi64(foo, 1);
+    foo = _mm_mullo_epi16(foo, bar);
+    foo = _mm_shuffle_epi32(foo, 78);
+    foo = _mm_xor_si128(bar, _mm_unpacklo_epi32 (foo, bar));
+    foo = _mm_srli_si128(foo, 1);
+
+    return _mm_extract_epi16(foo, 0) & (argc - 1);
+}
 
 _ACEOF
-if ac_fn_c_try_run "$LINENO"; then :
+if ac_fn_c_try_compile "$LINENO"; then :
 
     gf2x_cv_cc_supports_sse2=yes
 
 else
 
     CFLAGS="$ac_save_CFLAGS -msse2"
-    if test "$cross_compiling" = yes; then :
-  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
-as_fn_error $? "cannot run test program while cross compiling
-See \`config.log' for more details" "$LINENO" 5; }
-else
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
 #include <emmintrin.h>
-__v2di x;
-int main() {}
+__v2di x;       /* Our code currently uses these, but it should not */
+int main(int argc, char * argv) {
+     __m128i foo = _mm_setr_epi32(argc, argc + 1, argc + 2, argc + 3);
+     __m128i bar = _mm_setr_epi32(argc + 3, argc + 2, argc + 1, argc);
+    foo = _mm_mullo_epi16(foo, bar);
+    foo = _mm_slli_epi64(foo, 1);
+    foo = _mm_xor_si128(bar, _mm_unpacklo_epi32 (foo, bar));
+    foo = _mm_srli_epi64(foo, 1);
+    foo = _mm_mullo_epi16(foo, bar);
+    foo = _mm_shuffle_epi32(foo, 78);
+    foo = _mm_xor_si128(bar, _mm_unpacklo_epi32 (foo, bar));
+    foo = _mm_srli_si128(foo, 1);
+
+    return _mm_extract_epi16(foo, 0) & (argc - 1);
+}
 
 _ACEOF
-if ac_fn_c_try_run "$LINENO"; then :
+if ac_fn_c_try_compile "$LINENO"; then :
 
      gf2x_cv_cc_supports_sse2="requires -msse2"
 
@@ -16393,16 +16420,10 @@ else
      gf2x_cv_cc_supports_sse2=no
 
 fi
-rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
-  conftest.$ac_objext conftest.beam conftest.$ac_ext
-fi
-
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 
 fi
-rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
-  conftest.$ac_objext conftest.beam conftest.$ac_ext
-fi
-
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
   fi
 
 fi
@@ -16421,8 +16442,21 @@ else
 /* end confdefs.h.  */
 
 #include <emmintrin.h>
-__v2di x;
-int main() {}
+__v2di x;       /* Our code currently uses these, but it should not */
+int main(int argc, char * argv) {
+     __m128i foo = _mm_setr_epi32(argc, argc + 1, argc + 2, argc + 3);
+     __m128i bar = _mm_setr_epi32(argc + 3, argc + 2, argc + 1, argc);
+    foo = _mm_mullo_epi16(foo, bar);
+    foo = _mm_slli_epi64(foo, 1);
+    foo = _mm_xor_si128(bar, _mm_unpacklo_epi32 (foo, bar));
+    foo = _mm_srli_epi64(foo, 1);
+    foo = _mm_mullo_epi16(foo, bar);
+    foo = _mm_shuffle_epi32(foo, 78);
+    foo = _mm_xor_si128(bar, _mm_unpacklo_epi32 (foo, bar));
+    foo = _mm_srli_si128(foo, 1);
+
+    return _mm_extract_epi16(foo, 0) & (argc - 1);
+}
 
 _ACEOF
 if ac_fn_c_try_cpp "$LINENO"; then :
@@ -16436,8 +16470,21 @@ else
 /* end confdefs.h.  */
 
 #include <emmintrin.h>
-__v2di x;
-int main() {}
+__v2di x;       /* Our code currently uses these, but it should not */
+int main(int argc, char * argv) {
+     __m128i foo = _mm_setr_epi32(argc, argc + 1, argc + 2, argc + 3);
+     __m128i bar = _mm_setr_epi32(argc + 3, argc + 2, argc + 1, argc);
+    foo = _mm_mullo_epi16(foo, bar);
+    foo = _mm_slli_epi64(foo, 1);
+    foo = _mm_xor_si128(bar, _mm_unpacklo_epi32 (foo, bar));
+    foo = _mm_srli_epi64(foo, 1);
+    foo = _mm_mullo_epi16(foo, bar);
+    foo = _mm_shuffle_epi32(foo, 78);
+    foo = _mm_xor_si128(bar, _mm_unpacklo_epi32 (foo, bar));
+    foo = _mm_srli_si128(foo, 1);
+
+    return _mm_extract_epi16(foo, 0) & (argc - 1);
+}
 
 _ACEOF
 if ac_fn_c_try_cpp "$LINENO"; then :
@@ -16458,25 +16505,68 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $gf2x_cv_cpp_requires_msse2_flag" >&5
 $as_echo "$gf2x_cv_cpp_requires_msse2_flag" >&6; }
  fi
- CFLAGS=$ac_save_CFLAGS
- CPPFLAGS=$ac_save_CPPFLAGS
- if test "$gf2x_cv_cc_supports_sse2" = "requires -msse2" ;then
-  CFLAGS="$CFLAGS -msse2"
- fi
- if test "$gf2x_cv_cpp_requires_msse2_flag" = "yes" ; then
-  CPPFLAGS="$CPPFLAGS -msse2"
- fi
- if test "$gf2x_cv_cc_supports_sse2" != "no" ;then
+ { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we can run sse-2 code" >&5
+$as_echo_n "checking whether we can run sse-2 code... " >&6; }
+if ${gf2x_cv_can_run_sse2+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
 
-$as_echo "#define HAVE_SSE2_SUPPORT 1" >>confdefs.h
+  gf2x_cv_can_run_sse2=no
+  if test "x${gf2x_cv_cc_supports_sse2}" = xno ; then
+   echo $ECHO_N "cannot compile it, "
+  else
+   if test "$cross_compiling" = yes; then :
 
- fi
+    echo $ECHO_N "cross-compiling, "
+    gf2x_cv_can_run_sse2=no
 
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#include <emmintrin.h>
+__v2di x;       /* Our code currently uses these, but it should not */
+int main(int argc, char * argv) {
+     __m128i foo = _mm_setr_epi32(argc, argc + 1, argc + 2, argc + 3);
+     __m128i bar = _mm_setr_epi32(argc + 3, argc + 2, argc + 1, argc);
+    foo = _mm_mullo_epi16(foo, bar);
+    foo = _mm_slli_epi64(foo, 1);
+    foo = _mm_xor_si128(bar, _mm_unpacklo_epi32 (foo, bar));
+    foo = _mm_srli_epi64(foo, 1);
+    foo = _mm_mullo_epi16(foo, bar);
+    foo = _mm_shuffle_epi32(foo, 78);
+    foo = _mm_xor_si128(bar, _mm_unpacklo_epi32 (foo, bar));
+    foo = _mm_srli_si128(foo, 1);
+
+    return _mm_extract_epi16(foo, 0) & (argc - 1);
+}
+
+_ACEOF
+if ac_fn_c_try_run "$LINENO"; then :
+
+    gf2x_cv_can_run_sse2=yes
+
+else
+
+    gf2x_cv_can_run_sse2=no
+
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
+  conftest.$ac_objext conftest.beam conftest.$ac_ext
+fi
+
+  fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $gf2x_cv_can_run_sse2" >&5
+$as_echo "$gf2x_cv_can_run_sse2" >&6; }
+ CFLAGS=$ac_save_CFLAGS
+ CPPFLAGS=$ac_save_CPPFLAGS
 
 
  ac_save_CFLAGS="$CFLAGS"
- { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC can compile pclmulqdq and if it is supported by the hardware" >&5
-$as_echo_n "checking whether $CC can compile pclmulqdq and if it is supported by the hardware... " >&6; }
+ { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC can compile pclmulqdq" >&5
+$as_echo_n "checking whether $CC can compile pclmulqdq... " >&6; }
 if ${gf2x_cv_cc_supports_pclmul+:} false; then :
   $as_echo_n "(cached) " >&6
 else
@@ -16485,13 +16575,7 @@ else
   if test "x${enable_pclmul}" = xno ; then
    echo $ECHO_N " disabled, "
   else
-   if test "$cross_compiling" = yes; then :
-
-   echo $ECHO_N " cross-compiling, "
-   gf2x_cv_cc_supports_pclmul=no
-
-else
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
 #include <wmmintrin.h>
@@ -16508,20 +16592,14 @@ return zz.x[0] - 61;
 }
 
 _ACEOF
-if ac_fn_c_try_run "$LINENO"; then :
+if ac_fn_c_try_compile "$LINENO"; then :
 
     gf2x_cv_cc_supports_pclmul=yes
 
 else
 
     CFLAGS="$ac_save_CFLAGS -mpclmul"
-    if test "$cross_compiling" = yes; then :
-  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
-$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
-as_fn_error $? "cannot run test program while cross compiling
-See \`config.log' for more details" "$LINENO" 5; }
-else
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
 #include <wmmintrin.h>
@@ -16538,7 +16616,7 @@ return zz.x[0] - 61;
 }
 
 _ACEOF
-if ac_fn_c_try_run "$LINENO"; then :
+if ac_fn_c_try_compile "$LINENO"; then :
 
      gf2x_cv_cc_supports_pclmul="requires -mpclmul"
 
@@ -16547,16 +16625,10 @@ else
      gf2x_cv_cc_supports_pclmul=no
 
 fi
-rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
-  conftest.$ac_objext conftest.beam conftest.$ac_ext
-fi
-
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 
 fi
-rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
-  conftest.$ac_objext conftest.beam conftest.$ac_ext
-fi
-
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
   fi
 
 fi
@@ -16618,7 +16690,7 @@ if ac_fn_c_try_cpp "$LINENO"; then :
 
 else
 
-     as_fn_error $? "Sorry, the preprocessor can't parse pclmul !" "$LINENO" 5
+     as_fn_error $? "Sorry, the preprocessor can't parse pclmul!" "$LINENO" 5
 
 fi
 rm -f conftest.err conftest.i conftest.$ac_ext
@@ -16630,19 +16702,59 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $gf2x_cv_cpp_requires_mpclmul_flag" >&5
 $as_echo "$gf2x_cv_cpp_requires_mpclmul_flag" >&6; }
  fi
- CFLAGS="$ac_save_CFLAGS"
- CPPFLAGS="$ac_save_CPPFLAGS"
- if test "$gf2x_cv_cc_supports_pclmul" = "requires -mpclmul" ;then
-  CFLAGS="$CFLAGS -mpclmul"
- fi
- if test "$gf2x_cv_cpp_requires_mpclmul_flag" = "yes" ; then
-  CPPFLAGS="$CPPFLAGS -mpclmul"
- fi
- if test "$gf2x_cv_cc_supports_pclmul" != "no" ;then
+ { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we can run pclmul code" >&5
+$as_echo_n "checking whether we can run pclmul code... " >&6; }
+if ${gf2x_cv_can_run_pclmul+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
 
-$as_echo "#define HAVE_PCLMUL_SUPPORT 1" >>confdefs.h
+  gf2x_cv_can_run_pclmul=no
+  if test "x${gf2x_cv_cc_supports_pclmul}" = xno ; then
+   echo $ECHO_N "cannot compile it, "
+  else
+   if test "$cross_compiling" = yes; then :
 
- fi
+    echo $ECHO_N "cross-compiling, "
+    gf2x_cv_can_run_pclmul=no
+
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#include <wmmintrin.h>
+#include <assert.h>
+int main() {
+assert(sizeof(unsigned long) == 8); /* assume 64-bit */
+typedef union { __v2di s; unsigned long x[2]; } __v2di_proxy;
+__v2di xx, yy;
+__v2di_proxy zz;
+xx = (__v2di) { 23, 0 };
+yy = (__v2di) { 47, 0 };
+zz.s = _mm_clmulepi64_si128(xx, yy, 0);
+return zz.x[0] - 61;
+}
+
+_ACEOF
+if ac_fn_c_try_run "$LINENO"; then :
+
+    gf2x_cv_can_run_pclmul=yes
+
+else
+
+    gf2x_cv_can_run_pclmul=no
+
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
+  conftest.$ac_objext conftest.beam conftest.$ac_ext
+fi
+
+  fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $gf2x_cv_can_run_pclmul" >&5
+$as_echo "$gf2x_cv_can_run_pclmul" >&6; }
+ CFLAGS="$ac_save_CFLAGS"
+ CPPFLAGS="$ac_save_CPPFLAGS"
 
 
 : ${ABI='default'}
@@ -16691,7 +16803,9 @@ int main() {
 _ACEOF
 if ac_fn_c_try_run "$LINENO"; then :
 
-            detected=`cat conftest.out | tr -d -c 0-9`
+            # see bug #15631 and autoconf manual about tr.
+            # detected=`cat conftest.out | tr -d -c 0-9`
+            detected=`cat conftest.out`
             if test x$detected = x ; then
                 as_fn_error $? "test program failed" "$LINENO" 5
             else
@@ -16732,32 +16846,40 @@ if test x$hwdir = x ; then
  # Our _default_ setting for hwdir is to use 8*sizeof(ulong).
  hwdir=generic$gf2x_wordsize
 
- # Yet there are several situations in which we select another directory.
- # This refined selection mechanism is impacted by the ABI= setting.
- case "$target_cpu" in
-  # All 32-bit pentium patterns
-  i?86|pentium*|athlon|prescott)
-   if test "$gf2x_cv_cc_supports_sse2" = "no" ; then
-    hwdir=x86_nosse2
-   else
-    hwdir=x86_sse2
-    # Maybe on some funny platform from hell, we could get i386 yet have a
-    # 64-bit cpu ?
-    if test x$ABI = x64 ; then
-     hwdir=x86_64
+ if test "x${enable_hardware_specific_code}" = xno ; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: Not using automatic hardware-specific code due to --disable-hardware-specific-code flag" >&5
+$as_echo "$as_me: Not using automatic hardware-specific code due to --disable-hardware-specific-code flag" >&6;}
+ else
+  # Yet there are several situations in which we select another directory.
+  # This refined selection mechanism is impacted by the ABI= setting.
+  case "$target_cpu" in
+   # All 32-bit pentium patterns
+   i?86|pentium*|athlon|prescott)
+    if test "$gf2x_cv_can_run_sse2" = "no" ; then
+     hwdir=x86_nosse2
+    else
+     hwdir=x86_sse2
+     # Maybe on some funny platform from hell, we could get i386 yet have a
+     # 64-bit cpu ?
+     if test x$ABI = x64 ; then
+      hwdir=x86_64
+     fi
     fi
-   fi
-   ;;
-  core2|opteron|x86_64|nocona|k10)
-   # Note: could set to something else if we have separate tuning files.
-   if test "$gf2x_cv_cc_supports_pclmul" = "no" ; then
-     hwdir=x86_64
-   else
-     hwdir=x86_64_pclmul
-   fi
-   if test x$ABI = x32 ; then
-    hwdir=x86_sse2
-   elif test x$ABI = xdefault ; then
+    ;;
+   core2|opteron|x86_64|nocona|k10)
+    # Note: could set to something else if we have separate tuning files.
+    if test "$gf2x_cv_can_run_pclmul" = "no" ; then
+     if test "$gf2x_cv_can_run_sse2" = "no"; then
+      hwdir=generic64
+     else
+      hwdir=x86_64
+     fi
+    else
+      hwdir=x86_64_pclmul
+    fi
+    if test x$ABI = x32 ; then
+     hwdir=x86_sse2
+    elif test x$ABI = xdefault ; then
 
     if test x$gf2x_cv_ulongbits = x ; then
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking the number of bits in an unsigned long" >&5
@@ -16800,7 +16922,9 @@ int main() {
 _ACEOF
 if ac_fn_c_try_run "$LINENO"; then :
 
-            detected=`cat conftest.out | tr -d -c 0-9`
+            # see bug #15631 and autoconf manual about tr.
+            # detected=`cat conftest.out | tr -d -c 0-9`
+            detected=`cat conftest.out`
             if test x$detected = x ; then
                 as_fn_error $? "test program failed" "$LINENO" 5
             else
@@ -16825,21 +16949,85 @@ fi
 $as_echo "$gf2x_cv_ulongbits" >&6; }
     fi
 
-    case x$gf2x_cv_ulongbits in
-     x64|xdontknow) true ;;
-     *)
-       { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The default ABI for this compiler has $gf2x_cv_ulongbits-bit unsigned longs, not 64-bit as the CPU supports. Using $gf2x_cv_ulongbits-bit" >&5
+     case x$gf2x_cv_ulongbits in
+      x64|xdontknow) true ;;
+      *)
+        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The default ABI for this compiler has $gf2x_cv_ulongbits-bit unsigned longs, not 64-bit as the CPU supports. Using $gf2x_cv_ulongbits-bit" >&5
 $as_echo "$as_me: WARNING: The default ABI for this compiler has $gf2x_cv_ulongbits-bit unsigned longs, not 64-bit as the CPU supports. Using $gf2x_cv_ulongbits-bit" >&2;}
-       hwdir=x86_sse2;;
-    esac
-   fi
-   ;;
- esac
+        if test "$gf2x_cv_can_run_sse2" = "no"; then
+         hwdir=x86_nosse2
+        else
+         hwdir=x86_sse2
+        fi
+        ;;
+     esac
+    fi
+    ;;
+  esac
+ fi
 else
  { $as_echo "$as_me:${as_lineno-$LINENO}: Using supplied hwdir value $hwdir" >&5
 $as_echo "$as_me: Using supplied hwdir value $hwdir" >&6;}
 fi
 
+case "$hwdir" in
+ # the values below are based on
+ #  $ grep -E "HAVE_(PCLMUL|SSE2)_SUPPORT" */*.h
+ # in already_tuned
+ coreihwl)      want_sse2=no  ; want_pclmul=yes ;;
+ opteron)       want_sse2=no  ; want_pclmul=no  ;;
+ generic)       want_sse2=no  ; want_pclmul=no  ;;
+ generic32)     want_sse2=no  ; want_pclmul=no  ;;
+ generic64)     want_sse2=no  ; want_pclmul=no  ;;
+ tuned)         ;; # FIXME
+ x86_64)        want_sse2=yes ; want_pclmul=no  ;;
+ x86_64_pclmul) want_sse2=no  ; want_pclmul=yes ;;
+ x86_nosse2)    want_sse2=no  ; want_pclmul=no  ;; # FIXME dir doesn't exist
+ x86_sse2)      want_sse2=yes ; want_pclmul=no  ;;
+esac
+
+if test "x${enable_hardware_specific_code}" = xyes ; then
+ if test "$gf2x_cv_can_run_sse2"   = "yes" ; then want_sse2=yes  ; fi
+ if test "$gf2x_cv_can_run_pclmul" = "yes" ; then want_pclmul=yes; fi
+fi
+
+if test "$want_sse2"   = "yes" ; then
+
+ if test "$gf2x_cv_cc_supports_sse2" = "no" ;then
+  as_fn_error $? "Sorry, cannot enable sse-2 support!" "$LINENO" 5
+ else
+  if test "$gf2x_cv_cc_supports_sse2" = "requires -msse2" ;then
+   CFLAGS="$CFLAGS -msse2"
+  fi
+  if test "$gf2x_cv_cpp_requires_msse2_flag" = "yes" ; then
+   CPPFLAGS="$CPPFLAGS -msse2"
+  fi
+
+$as_echo "#define HAVE_SSE2_SUPPORT 1" >>confdefs.h
+
+ fi
+
+fi
+if test "$want_pclmul" = "yes" ; then
+
+ if test "$gf2x_cv_cc_supports_pclmul" = "no" ;then
+  as_fn_error $? "Sorry, cannot enable pclmul support!" "$LINENO" 5
+ else
+  if test "$gf2x_cv_cc_supports_pclmul" = "requires -mpclmul" ;then
+   CFLAGS="$CFLAGS -mpclmul"
+  fi
+  if test "$gf2x_cv_cpp_requires_mpclmul_flag" = "yes" ; then
+   CPPFLAGS="$CPPFLAGS -mpclmul"
+  fi
+
+$as_echo "#define HAVE_PCLMUL_SUPPORT 1" >>confdefs.h
+
+ fi
+
+fi
+gf2x_sse2_available=$want_sse2
+gf2x_pclmul_available=$want_pclmul
+
 { $as_echo "$as_me:${as_lineno-$LINENO}: using ABI=\"$ABI\"" >&5
 $as_echo "$as_me: using ABI=\"$ABI\"" >&6;}
 { $as_echo "$as_me:${as_lineno-$LINENO}:       CC=\"$CC\"" >&5
@@ -16919,7 +17107,9 @@ int main() {
 _ACEOF
 if ac_fn_c_try_run "$LINENO"; then :
 
-            detected=`cat conftest.out | tr -d -c 0-9`
+            # see bug #15631 and autoconf manual about tr.
+            # detected=`cat conftest.out | tr -d -c 0-9`
+            detected=`cat conftest.out`
             if test x$detected = x ; then
                 as_fn_error $? "test program failed" "$LINENO" 5
             else
@@ -16974,7 +17164,7 @@ else
   GF2X_64BIT_SOURCES_FALSE=
 fi
 
- if test "x$gf2x_cv_cc_supports_sse2" != xno; then
+ if test "x$gf2x_sse2_available" = xyes; then
   GF2X_SSE2_AVAILABLE_TRUE=
   GF2X_SSE2_AVAILABLE_FALSE='#'
 else
@@ -16982,7 +17172,7 @@ else
   GF2X_SSE2_AVAILABLE_FALSE=
 fi
 
- if test "x$gf2x_cv_cc_supports_pclmul" != xno; then
+ if test "x$gf2x_pclmul_available" = xyes; then
   GF2X_PCLMUL_AVAILABLE_TRUE=
   GF2X_PCLMUL_AVAILABLE_FALSE='#'
 else
diff --git a/gf2x/gf2x-config.h.in b/gf2x/gf2x-config.h.in
index 99c4583..6654c7c 100644
--- a/gf2x/gf2x-config.h.in
+++ b/gf2x/gf2x-config.h.in
@@ -10,7 +10,7 @@
 #undef HAVE_MEMORY_H
 
 /* Define if pclmul as present in the source tree is supported by the compiler
-   and hardware */
+   */
 #undef HAVE_PCLMUL_SUPPORT
 
 /* Define if sse-2 code as present in the source tree is supported by the
-- 
2.0.0

