Fix ring creation in mprimdec.lib.

--- a/latest/Singular/LIB/mprimdec.lib	2016-08-26 11:03:15.816296318 +0000
+++ b/latest/Singular/LIB/mprimdec.lib	2016-08-26 11:10:38.037077357 +0000
@@ -222,7 +222,7 @@
   if(size(ann)==0)
   {
     def BAS=basering;
-    execute("ring Rloc=("+charstr(basering)+","+varstr(basering)+"),dummy,("+ordstr(basering)+");");
+    execute("ring Rloc=("+charstr(basering)+","+varstr(basering)+"),dummy,(C,dp);");
     module @N=imap(BAS, @N);
     poly @q=prepareSat(@N);
 
@@ -632,7 +632,7 @@
   ////////////////////////////////////////////////////////////////
   if(size(ann)==0)
   {
-    execute("ring Rloc=("+charstr(basering)+","+varstr(basering)+"),dummy,("+ordstr(basering)+");");
+    execute("ring Rloc=("+charstr(basering)+","+varstr(basering)+"),dummy,(C,dp);");
     module @N=imap(BAS, @N);
     poly @q=prepareSat(@N);
 
@@ -1422,7 +1422,7 @@
   def BAS = basering;
   if(size(ann)==0)      //check, whether ann=0
   {
-   execute("ring Rloc=("+charstr(basering)+","+varstr(basering)+"),dummy,("+ordstr(basering)+");");
+   execute("ring Rloc=("+charstr(basering)+","+varstr(basering)+"),dummy,(C,dp);");
    module @N=clrSBmod(imap(BAS, @N));
    module @M=freemodule(nrows(@N));
    poly @q=prepareSat(@N);
