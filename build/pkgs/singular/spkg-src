#!/usr/bin/env bash

if [ "$SAGE_DISTFILES" = "" ]; then
    echo >&2 "SAGE_DISTFILES undefined ... exiting";
    echo >&2 "Maybe run 'sage -sh'?"
    exit 1
fi

if [ $# -ne 0 ]; then
    UPSTREAM_SOURCE_DIRECTORY=`cd "$1" && pwd -P`
    echo "Using tarballs from $UPSTREAM_SOURCE_DIRECTORY instead of downloading"
fi

set -e
umask 0022


SAGEVERSION=`cat $(dirname "$0")/package-version.txt`
VERSION=`echo "$SAGEVERSION" | sed 's/[.]p[0-9]*$//'`
PKGNAME="singular-$VERSION"
DOTVERSION=`echo "$SAGEVERSION" | sed 's/p.*//'`
DASHVERSION=`echo "$DOTVERSION" | sed 's/[.]/-/g'`
TARBALL1="singular-${VERSION}.tar.gz"
TARBALL2="singular-${DOTVERSION}-share.tar.gz"
TARGET="$SAGE_DISTFILES/$PKGNAME.tar.bz2"

echo >&2 "Creating tarball $TARGET..."

# Remove old sources and download new
SPKG_ROOT="$SAGE_ROOT/tmp/singular"

rm -rf "$SPKG_ROOT"
mkdir -p "$SPKG_ROOT/$PKGNAME"
cd "$SPKG_ROOT/$PKGNAME"

URL="http://www.mathematik.uni-kl.de/ftp/pub/Math/Singular/SOURCES/$DASHVERSION"
if [ -z "$UPSTREAM_SOURCE_DIRECTORY" ]; then
    tar xzf <( curl -L "$URL/$TARBALL1" )
    tar xzf <( curl -L "$URL/$TARBALL2" )
else
    tar xzf "$UPSTREAM_SOURCE_DIRECTORY/$TARBALL1"
    tar xzf "$UPSTREAM_SOURCE_DIRECTORY/$TARBALL2"
fi

# Make everything writable
chmod -R u+w *

### Sanitize upstream shared (documentation) dir
if [ ! -d share/singular ]; then
    echo "Singular directory not in Singular shared tarball, aborting"
    exit 1
fi
mkdir shared
mv "share/singular/doc/singular.idx" shared/
mv "share/singular/info/singular.hlp" shared/
rm -r share


# Sanitize upstream sources
if [ ! -d "singular-$DOTVERSION" ]; then
    echo "singular-$DOTVERSION directory not in Singular tarball, aborting"
    exit 1
fi
mv "singular-$DOTVERSION" latest


### Create actual upstream package

cd "$SPKG_ROOT"
tar c "$PKGNAME" | bzip2 -c --best >"$TARGET"
cd "$SAGE_ROOT"
rm -rf "$SPKG_ROOT"

sage-fix-pkg-checksums "$TARGET"
