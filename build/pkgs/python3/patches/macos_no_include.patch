diff --git a/configure b/configure
index 18047ce..4f9e290 100755
--- a/configure
+++ b/configure
@@ -7430,6 +7430,11 @@ $as_echo "$ac_cv_enable_implicit_function_declaration_error" >&6; }
     Darwin*)
         # -Wno-long-double, -no-cpp-precomp, and -mno-fused-madd
         # used to be here, but non-Apple gcc doesn't accept them.
+
+cat >>confdefs.h <<_ACEOF
+#define Py_MACOS_SYSROOT `xcrun --show-sdk-path`
+_ACEOF
+
         if test "${CC}" = gcc
         then
             { $as_echo "$as_me:${as_lineno-$LINENO}: checking which compiler should be used" >&5
diff --git a/configure.ac b/configure.ac
index ad0f4d4..422a801 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1826,6 +1826,7 @@ yes)
     Darwin*)
         # -Wno-long-double, -no-cpp-precomp, and -mno-fused-madd
         # used to be here, but non-Apple gcc doesn't accept them.
+        AC_DEFINE_UNQUOTED([Py_MACOS_SYSROOT], [`xcrun --show-sdk-path`], [Get the root dir of XCode])
         if test "${CC}" = gcc
         then
             AC_MSG_CHECKING(which compiler should be used)
diff --git a/pyconfig.h.in b/pyconfig.h.in
index 4032fa5..20b665c 100644
--- a/pyconfig.h.in
+++ b/pyconfig.h.in
@@ -1337,6 +1337,9 @@
    externally defined: 0 */
 #undef Py_HASH_ALGORITHM
 
+/* Get the root dir of XCode */
+#undef Py_MACOS_SYSROOT
+
 /* assume C89 semantics that RETSIGTYPE is always void */
 #undef RETSIGTYPE
 
diff --git a/setup.py b/setup.py
index b4357e3..212fd0c 100644
--- a/setup.py
+++ b/setup.py
@@ -98,7 +98,7 @@ def macosx_sdk_root():
     cflags = sysconfig.get_config_var('CFLAGS')
     m = re.search(r'-isysroot\s+(\S+)', cflags)
     if m is None:
-        sysroot = '/'
+        sysroot = sysconfig.get_config_var('Py_MACOS_SYSROOT')
     else:
         sysroot = m.group(1)
     return sysroot
@@ -641,6 +641,7 @@ class PyBuildExt(build_ext):
             # NOTE: using shlex.split would technically be more correct, but
             # also gives a bootstrap problem. Let's hope nobody uses
             # directories with whitespace in the name to store libraries.
+            inc_dirs += ['/usr/include']
             cflags, ldflags = sysconfig.get_config_vars(
                     'CFLAGS', 'LDFLAGS')
             for item in cflags.split():
