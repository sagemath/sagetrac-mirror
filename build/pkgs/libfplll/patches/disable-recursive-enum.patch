This optional implementation feature needs to be disabled on Cygwin (for now,
due to bugs in its binutils version).  This patch adds a ./configure flag to
make that easier.

https://trac.sagemath.org/ticket/22800
diff --git a/configure b/configure
index ce0e7fd..f1eccd5 100755
--- a/configure
+++ b/configure
@@ -776,6 +776,7 @@ with_gmp
 with_mpfr
 with_qd
 with_max_enumeration_dimension
+enable_recursive_enum
 '
       ac_precious_vars='build_alias
 host_alias
@@ -1420,6 +1421,8 @@ Optional Features:
   --disable-dependency-tracking
                           speeds up one-time build
   --disable-libtool-lock  avoid locking (might break parallel builds)
+  --disable-recursive-enum
+                          Disable recursive enumeration
 
 Optional Packages:
   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
@@ -18220,6 +18223,19 @@ cat >>confdefs.h <<_ACEOF
 _ACEOF
 
 
+# Check whether --enable-recursive-enum was given.
+if test "${enable_recursive_enum+set}" = set; then :
+  enableval=$enable_recursive_enum;
+fi
+
+
+if test "x$enable_recursive_enum" != "xno"; then :
+
+
+$as_echo "#define FPLLL_WITH_RECURSIVE_ENUM 1" >>confdefs.h
+
+fi
+
 # Store version numbers in header
 
 
diff --git a/fplll/enum/enumerate_base.h b/fplll/enum/enumerate_base.h
index 3fcffa5..860b207 100644
--- a/fplll/enum/enumerate_base.h
+++ b/fplll/enum/enumerate_base.h
@@ -32,7 +32,6 @@ inline void roundto(int &dest, const double &src) { dest = (int)round(src); }
 inline void roundto(double &dest, const double &src) { dest = round(src); }
 
 /* config */
-#define FPLLL_WITH_RECURSIVE_ENUM 1
 #define MAXTEMPLATEDDIMENSION 80  // unused
 //#define FORCE_ENUM_INLINE // not recommended
 /* end config */
diff --git a/fplll/fplll_config.h.in b/fplll/fplll_config.h.in
index 574db4d..0119015 100644
--- a/fplll/fplll_config.h.in
+++ b/fplll/fplll_config.h.in
@@ -25,4 +25,7 @@
 /* Maximum supported enumeration dimension */
 #define FPLLL_MAX_ENUM_DIMENSION @FPLLL_MAX_ENUM_DIMENSION@
 
+/* Recursive enumeration enabled */
+#undef FPLLL_WITH_RECURSIVE_ENUM
+
 #endif //FPLLL_CONFIG__H
