commit 739b1688e6536785adcd09db69bbc019b568b2ad
Author: Karim Belabas <Karim.Belabas@math.u-bordeaux.fr>
Date:   Mon Dec 4 22:19:42 2017 +0100

    58- change 'debugmem' default value to 1
    
    no memory-related message at (non-recommended) value 0.

diff --git a/src/functions/default/debugmem b/src/functions/default/debugmem
index a7dfcfe..9736c71 100644
--- a/src/functions/default/debugmem
+++ b/src/functions/default/debugmem
@@ -4,13 +4,17 @@ Section: default
 C-Name: sd_debugmem
 Prototype:
 Help:
-Doc: memory debugging level. If it is non-zero, \kbd{gp} will regularly print
- information on memory usage. If it's greater than 2, it will indicate any
- important garbage collecting and the function it is taking place in
- (see~\b{gm}).
+Doc: memory debugging level. If it is non-zero, \kbd{gp} will notify when
+ \kbd{parisize} changes (within the boundaries set by \kbd{parisizemax})
+ If it is greater than 2, indicate any important garbage collecting and the
+ function it is taking place in (see~\b{gm}). If greater than 3, it will
+ indicate the creation/destruction of ``blocks'' (or clones).
 
- \noindent {\bf Important Note:} As it noticeably slows down the performance,
- the first functionality (memory usage) is disabled if you're not running a
- version compiled for debugging (see Appendix~A).
+ \noindent {\bf Important Note:}
+ if you are running a version compiled for debugging (see Appendix~A),
+ \kbd{gp} will regularly print information on memory usage if \kbd{debugmem}
+ is $\geq 2$. This functionality is disabled on non-debugging builds as it
+ noticeably slows down the performance.
 
- The default value is \kbd{0} (no debugging messages).
+ The default value is \kbd{1} (no debugging messages except \kbd{parisize}
+ changes).
diff --git a/src/kernel/none/level1.h b/src/kernel/none/level1.h
index 8d7495f..9c69785 100644
--- a/src/kernel/none/level1.h
+++ b/src/kernel/none/level1.h
@@ -107,7 +107,7 @@ new_chunk(size_t x) /* x is a number of longs */
     new_chunk_resize(x);
   avma = (pari_sp)z;
 #ifdef MEMSTEP
-  if (DEBUGMEM && pari_mainstack->memused != DISABLE_MEMUSED) {
+  if (DEBUGMEM>1 && pari_mainstack->memused != DISABLE_MEMUSED) {
     long d = (long)pari_mainstack->memused - (long)z;
     if (labs(d) > 4*MEMSTEP)
     {
diff --git a/src/language/init.c b/src/language/init.c
index e912297..345519a 100644
--- a/src/language/init.c
+++ b/src/language/init.c
@@ -535,7 +535,8 @@ pari_init_defaults(void)
 #endif
 
   precdl = 16;
-  DEBUGFILES = DEBUGLEVEL = DEBUGMEM = 0;
+  DEBUGFILES = DEBUGLEVEL = 0;
+  DEBUGMEM = 1;
   disable_color = 1;
   logstyle = logstyle_none;
 
@@ -784,7 +785,9 @@ parivstack_resize(ulong newsize)
   evalstate_reset();
   paristack_setsize(pari_mainstack->rsize, newsize);
   s = pari_mainstack->vsize ? pari_mainstack->vsize : pari_mainstack->rsize;
-  pari_warn(warner,"new maximum stack size = %lu (%.3f Mbytes)", s, s/1048576.);
+  if (DEBUGMEM)
+    pari_warn(warner,"new maximum stack size = %lu (%.3f Mbytes)",
+              s, s/1048576.);
   pari_init_errcatch();
   cb_pari_err_recover(-1);
 }
@@ -798,7 +801,8 @@ paristack_newrsize(ulong newsize)
     pari_mainstack_resize(pari_mainstack, newsize, vsize);
   evalstate_reset();
   s = pari_mainstack->rsize;
-  pari_warn(warner,"new stack size = %lu (%.3f Mbytes)", s, s/1048576.);
+  if (DEBUGMEM)
+    pari_warn(warner,"new stack size = %lu (%.3f Mbytes)", s, s/1048576.);
   pari_init_errcatch();
   cb_pari_err_recover(-1);
 }
@@ -812,7 +816,10 @@ paristack_resize(ulong newsize)
   newsize = minuu(newsize, pari_mainstack->vsize);
   if (newsize <= pari_mainstack->size) return;
   if (pari_mainstack_setsize(pari_mainstack, newsize))
-    pari_warn(warner, "increasing stack size to %lu", pari_mainstack->size);
+  {
+    if (DEBUGMEM)
+      pari_warn(warner, "increasing stack size to %lu", pari_mainstack->size);
+  }
   else
   {
     pari_mainstack_setsize(pari_mainstack, size);
commit eb228c0dfd03ca22216b8848d20d81f3b9c944a9
Author: Karim Belabas <Karim.Belabas@math.u-bordeaux.fr>
Date:   Tue Dec 5 14:09:30 2017 +0100

    58- change 'debugmem' default value to 1 under gp and 0 in libpari mode;
    
    no memory-related message at value 0 (not recommended under gp).

diff --git a/src/functions/default/debugmem b/src/functions/default/debugmem
index 9736c71..11ba680 100644
--- a/src/functions/default/debugmem
+++ b/src/functions/default/debugmem
@@ -4,17 +4,24 @@ Section: default
 C-Name: sd_debugmem
 Prototype:
 Help:
-Doc: memory debugging level. If it is non-zero, \kbd{gp} will notify when
- \kbd{parisize} changes (within the boundaries set by \kbd{parisizemax})
- If it is greater than 2, indicate any important garbage collecting and the
- function it is taking place in (see~\b{gm}). If greater than 3, it will
- indicate the creation/destruction of ``blocks'' (or clones).
+Doc: memory debugging level (see \b{gm}). If this is non-zero, \kbd{gp} will
+ print increasingly precise notifications about memory use:
+
+ \item $\kbd{debugmem} > 0$, notify when \kbd{parisize} changes (within the
+ boundaries set by \kbd{parisizemax});
+
+ \item $\kbd{debugmem} > 1$, indicate any important garbage collection and the
+ function it is taking place in;
+
+ \item $\kbd{debugmem} > 2$, indicate the creation/destruction of
+ ``blocks'' (or clones); expect lots of messages.
 
  \noindent {\bf Important Note:}
- if you are running a version compiled for debugging (see Appendix~A),
- \kbd{gp} will regularly print information on memory usage if \kbd{debugmem}
- is $\geq 2$. This functionality is disabled on non-debugging builds as it
- noticeably slows down the performance.
+ if you are running a version compiled for debugging (see Appendix~A) and
+ $\kbd{debugmem} > 1$, \kbd{gp} will further regularly print information on
+ memory usage, notifying whenever stack usage goes up or down by 1 MByte.
+ This functionality is disabled on non-debugging builds as it noticeably
+ slows down the performance.
 
- The default value is \kbd{1} (no debugging messages except \kbd{parisize}
- changes).
+ The default value is \kbd{1} under \kbd{gp} (no messages except
+ \kbd{parisize} changes) and \kbd{0} in library mode (no messages).
diff --git a/src/gp/gp.c b/src/gp/gp.c
index 9227fdd..62b0250 100644
--- a/src/gp/gp.c
+++ b/src/gp/gp.c
@@ -561,6 +561,7 @@ main(int argc, char **argv)
   cb_pari_break_loop = break_loop;
   cb_pari_is_interactive = is_interactive;
 
+  DEBUGMEM = 1;
   read_opt(&s_A, argc,argv);
   pari_init_primes(GP_DATA->primelimit);
 #ifdef SIGALRM
diff --git a/src/language/init.c b/src/language/init.c
index 345519a..b62500c 100644
--- a/src/language/init.c
+++ b/src/language/init.c
@@ -535,8 +535,7 @@ pari_init_defaults(void)
 #endif
 
   precdl = 16;
-  DEBUGFILES = DEBUGLEVEL = 0;
-  DEBUGMEM = 1;
+  DEBUGFILES = DEBUGLEVEL = DEBUGMEM = 0;
   disable_color = 1;
   logstyle = logstyle_none;
 
commit def3bed8d2dcba1ea88a6e3faacd316124a63147
Author: Bill Allombert <Bill.Allombert@math.u-bordeaux.fr>
Date:   Tue Dec 19 20:41:13 2017 +0100

    Set debugmem to 1 uniformly for backward-compatibility.

diff --git a/src/functions/default/debugmem b/src/functions/default/debugmem
index 11ba680..fd45244 100644
--- a/src/functions/default/debugmem
+++ b/src/functions/default/debugmem
@@ -23,5 +23,4 @@ Doc: memory debugging level (see \b{gm}). If this is non-zero, \kbd{gp} will
  This functionality is disabled on non-debugging builds as it noticeably
  slows down the performance.
 
- The default value is \kbd{1} under \kbd{gp} (no messages except
- \kbd{parisize} changes) and \kbd{0} in library mode (no messages).
+ The default value is \kbd{1}.
diff --git a/src/gp/gp.c b/src/gp/gp.c
index 62b0250..9227fdd 100644
--- a/src/gp/gp.c
+++ b/src/gp/gp.c
@@ -561,7 +561,6 @@ main(int argc, char **argv)
   cb_pari_break_loop = break_loop;
   cb_pari_is_interactive = is_interactive;
 
-  DEBUGMEM = 1;
   read_opt(&s_A, argc,argv);
   pari_init_primes(GP_DATA->primelimit);
 #ifdef SIGALRM
diff --git a/src/language/init.c b/src/language/init.c
index b62500c..345519a 100644
--- a/src/language/init.c
+++ b/src/language/init.c
@@ -535,7 +535,8 @@ pari_init_defaults(void)
 #endif
 
   precdl = 16;
-  DEBUGFILES = DEBUGLEVEL = DEBUGMEM = 0;
+  DEBUGFILES = DEBUGLEVEL = 0;
+  DEBUGMEM = 1;
   disable_color = 1;
   logstyle = logstyle_none;
 
