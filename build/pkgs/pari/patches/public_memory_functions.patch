diff --git a/src/headers/paridecl.h b/src/headers/paridecl.h
index 7067183..4ede6ed 100644
--- a/src/headers/paridecl.h
+++ b/src/headers/paridecl.h
@@ -2819,6 +2819,9 @@ GEN     pari_thread_start(struct pari_thread *t);
 void    pari_thread_valloc(struct pari_thread *t, size_t s, size_t v, GEN arg);
 GEN     pari_version(void);
 void    pari_warn(int numerr, ...);
+void *  pari_mainstack_malloc(size_t size);
+void    pari_mainstack_mfree(void *s, size_t size);
+void    pari_mainstack_free(struct pari_mainstack *st);
 void    paristack_alloc(size_t rsize, size_t vsize);
 void    paristack_newrsize(ulong newsize);
 void    paristack_resize(ulong newsize);
diff --git a/src/language/init.c b/src/language/init.c
index 7b5922d..2a578d7 100644
--- a/src/language/init.c
+++ b/src/language/init.c
@@ -612,7 +612,7 @@ pari_add_oldmodule(entree *ep)
 #ifndef MAP_NORESERVE
 #define MAP_NORESERVE 0
 #endif
-static void *
+void *
 pari_mainstack_malloc(size_t size)
 {
   void *b = mmap(NULL, size, PROT_READ|PROT_WRITE,
@@ -620,7 +620,7 @@ pari_mainstack_malloc(size_t size)
   return (b == MAP_FAILED) ? NULL: b;
 }
 
-static void
+void
 pari_mainstack_mfree(void *s, size_t size)
 {
   munmap(s, size);
@@ -634,13 +634,13 @@ pari_mainstack_mreset(void *s, size_t size)
 
 #else
 #define PARI_STACK_ALIGN (0x40UL)
-static void *
+void *
 pari_mainstack_malloc(size_t s)
 {
   return malloc(s); /* NOT pari_malloc, e_MEM would be deadly */
 }
 
-static void
+void
 pari_mainstack_mfree(void *s, size_t size) { (void) size; free(s); }
 
 static void
@@ -681,7 +681,7 @@ pari_mainstack_alloc(struct pari_mainstack *st, size_t rsize, size_t vsize)
   st->memused = 0;
 }
 
-static void
+void
 pari_mainstack_free(struct pari_mainstack *st)
 {
   pari_mainstack_mfree((void*)st->vbot, st->vsize ? st->vsize : fix_size(st->rsize));
