diff -druN src/dispatch.h src.ptchd/dispatch.h
--- a/src/dispatch.h	2016-11-02 08:19:40.000000000 +0000
+++ b/src.ptchd/dispatch.h	2017-05-22 10:55:52.740490741 +0000
@@ -23,10 +23,6 @@
 namespace giac {
 #endif // ndef NO_NAMESPACE_GIAC
 
-#if !defined DOUBLEVAL && (defined __amd64 || defined __x86_64) && !defined SMARTPTR64 
-#define DOUBLEVAL 1
-#endif
-
   enum {
     _DECALAGE=8, // 2^8=256
     _DISPATCHBASE=256,
diff -druN src/first.h src.ptchd/first.h
--- a/src/first.h	2017-01-27 18:32:24.000000000 +0000
+++ b/src.ptchd/first.h	2017-05-19 15:35:51.823882293 +0000
@@ -78,6 +78,14 @@
 #endif
 #endif
 
+#if defined(__x86_64__) || defined(__PPC64__) || defined(__aarch64__)
+#define _64BIT_PTR_
+#endif
+
+#if !defined DOUBLEVAL && defined _64BIT_PTR_ && !defined SMARTPTR64 
+#define DOUBLEVAL 1
+#endif
+
 #ifdef __sparc__
 #define DOUBLEVAL
 #define GIAC_NO_OPTIMIZATIONS
@@ -107,7 +107,7 @@
 #define my_ostream std::ostream
 #endif
 
-#ifdef __x86_64__
+#ifdef _64BIT_PTR_
 #define alias_type ulonglong
 #else
 #define alias_type size_t
@@ -180,7 +180,7 @@
 
 #endif //  NO_UNARY_FUNCTION_COMPOSE
 
-#ifdef __x86_64__
+#ifdef _64BIT_PTR_
 #define define_unary_function_ptr(name,alias_name,ptr) const ulonglong alias_name = (ulonglong)(ptr); const unary_function_ptr * const name = (const unary_function_ptr *) &alias_name
 #else
 #define define_unary_function_ptr(name,alias_name,ptr) const size_t alias_name = (size_t)(ptr); const unary_function_ptr * const name = (const unary_function_ptr *) &alias_name
@@ -192,13 +192,13 @@
 #endif
 
 #ifdef STATIC_BUILTIN_LEXER_FUNCTIONS
-#ifdef __x86_64__
+#ifdef _64BIT_PTR_
 #define define_unary_function_ptr5(name,alias_name,ptr,quoted,token) const ulonglong alias_name = ulonglong(ptr); const unary_function_ptr * const name = (const unary_function_ptr *) &alias_name;
 #else
 #define define_unary_function_ptr5(name,alias_name,ptr,quoted,token) const size_t alias_name = (size_t)(ptr); const unary_function_ptr * const name = (const unary_function_ptr *) &alias_name;
 #endif
 #else
-#ifdef __x86_64__
+#ifdef _64BIT_PTR_
 #define define_unary_function_ptr5(name,alias_name,ptr,quoted,token) static const unary_function_ptr alias_name##_(ptr,quoted,token); const ulonglong alias_name=(ulonglong)ptr; const unary_function_ptr * const name = &alias_name##_;
 #else
 #define define_unary_function_ptr5(name,alias_name,ptr,quoted,token) static const unary_function_ptr alias_name##_(ptr,quoted,token); const size_t alias_name=(size_t)ptr; const unary_function_ptr * const name = &alias_name##_;
@@ -234,7 +234,7 @@
 #else // __VISUALC__
 typedef long long longlong;
 typedef unsigned long long ulonglong;
-#ifdef __x86_64__
+#ifdef _64BIT_PTR_
   typedef int int128_t __attribute__((mode(TI)));
   typedef unsigned int uint128_t __attribute__((mode(TI)));
 #ifndef INT128
diff -druN src/gen.h src.ptchd/gen.h
--- a/src/gen.h	2017-01-31 17:12:36.000000000 +0000
+++ b/src.ptchd/gen.h	2017-05-19 15:25:40.203252458 +0000
@@ -461,7 +461,7 @@
     gen operator () (const gen & arg,GIAC_CONTEXT) const;
 #ifdef NO_UNARY_FUNCTION_COMPOSE
     inline unary_function_eval * ptr() const {
-#ifdef __x86_64__
+#ifdef _64BIT_PTR_
       return (unary_function_eval *) (((ulonglong ) _ptr) & 0xfffffffffffffffc);
 #else
       return (unary_function_eval *) (((size_t) _ptr) & 0xfffffffc);
@@ -470,7 +470,7 @@
 #else // NO_UNARY_FUNCTION_COMPOSE
     inline unary_function_abstract * ptr () const
     {
-#ifdef __x86_64__
+#ifdef _64BIT_PTR_
       return (unary_function_abstract *) (((ulonglong ) _ptr) & 0xfffffffffffffffc);
 #else
       return (unary_function_abstract *) (((size_t) _ptr) & 0xfffffffc);
@@ -480,7 +480,7 @@
     bool quoted() const ;
     inline bool operator ==(const unary_function_ptr & u) const { 
       // if (&u==this) return true; 
-#ifdef __x86_64__
+#ifdef _64BIT_PTR_
       return ((ulonglong)(_ptr) & 0xfffffffffffffffc)  == ((ulonglong)( u._ptr) & 0xfffffffffffffffc ); 
 #else
       return ((size_t)(_ptr) & 0xfffffffc) == ((size_t)(u._ptr) & 0xfffffffc); 
@@ -489,7 +489,7 @@
     inline bool operator !=(const unary_function_ptr & u) const { return !(*this==u); }
     inline bool operator ==(const unary_function_ptr * u) const { 
       // if (&u==this) return true; 
-#ifdef __x86_64__
+#ifdef _64BIT_PTR_
       return u && ( ((ulonglong)(_ptr) & 0xfffffffffffffffc) == ((ulonglong)(u->_ptr) & 0xfffffffffffffffc) ); 
 #else
       return u && ( ((size_t)(_ptr) & 0xfffffffc) == ((size_t)(u->_ptr) & 0xfffffffc ) ); 
diff -druN src/pari.cc src.ptchd/pari.cc
--- a/src/pari.cc	2017-02-06 09:28:06.000000000 +0000
+++ b/src.ptchd/pari.cc	2017-05-19 15:29:10.173557523 +0000
@@ -173,7 +173,7 @@
     long n=lg(G);
     gen res;
     for (int i=2;i<n;++i){
-#ifdef __x86_64__ // FIXME make a gen constructor from ulonglong
+#ifdef _64BIT_PTR_ // FIXME make a gen constructor from ulonglong
       unsigned long u=G[i];
       res=res*pow2sizeof_long;
       if (u%2)
diff -druN src/symbolic.cc src.ptchd/symbolic.cc
--- a/src/symbolic.cc	2017-01-16 08:16:00.000000000 +0000
+++ b/src.ptchd/symbolic.cc	2017-05-19 15:27:46.313466185 +0000
@@ -37,7 +37,7 @@
 #endif // ndef NO_NAMESPACE_GIAC
 
   // unary_function_ptr quoted_op[]={at_of,at_for,at_bloc,at_local,at_program,at_rpn_prog,at_ifte,at_try_catch,at_print,at_signal,at_as_function_of,at_lieu,at_legende,at_debug,at_sst,at_sst_in,at_cont,at_kill,at_halt,at_watch,at_rmwatch,at_breakpoint,at_maple2mupad,at_mupad2maple,at_maple2xcas,at_mupad2xcas,at_purge,0};
-#if defined(GIAC_GENERIC_CONSTANTS) || defined(VISUALC) || defined(__x86_64__)
+#if defined(GIAC_GENERIC_CONSTANTS) || defined(VISUALC) || defined(_64BIT_PTR_)
   const unary_function_ptr * archive_function_tab(){
     static const unary_function_ptr archive_function_tab_ptr[]={*at_plus,*at_neg,*at_binary_minus,*at_prod,*at_division,*at_inv,*at_pow,*at_exp,*at_ln,*at_abs,*at_arg,*at_pnt,*at_point,*at_segment,*at_sto,*at_sin,
 								*at_cos,*at_tan,*at_asin,*at_acos,*at_atan,*at_sinh,*at_cosh,*at_tanh,*at_asinh,*at_acos,*at_atanh,*at_interval,*at_union,*at_minus,*at_intersect,*at_not,
