Always use ALLOCA macro instead of alloca()

diff -ru a/src/gen.cc b/src/gen.cc
--- a/src/gen.cc	2018-01-10 14:16:00.000000000 +0100
+++ b/src/gen.cc	2018-02-01 19:36:02.128020823 +0100
@@ -11153,7 +11153,7 @@
 
   /* I/O: Input routines */
 
-  gen chartab2gen(char * & s,GIAC_CONTEXT){
+  gen chartab2gen(char * s,GIAC_CONTEXT){
     gen res;
     // subtype=0;
     // initialize as a null _INT_
@@ -11200,11 +11200,7 @@
     if (l>0 && s[l-1]=='.'){
       // make a copy of s, call chartab2gen recursivly, 
       // because some implementations of strtod do not like a . at the end
-#ifdef FREERTOS
       ALLOCA(char, scopy, l+2); 
-#else
-      char * scopy=(char *)alloca(l+2);
-#endif
       strcpy(scopy,s);
       scopy[l]='0';
       scopy[l+1]=0;
diff -ru a/src/gen.h b/src/gen.h
--- a/src/gen.h	2017-12-19 21:15:00.000000000 +0100
+++ b/src/gen.h	2018-02-01 19:35:56.090020807 +0100
@@ -930,7 +930,7 @@
   void gen_sort_f(iterateur it,iterateur itend,bool (*f)(const gen &a,const gen &b));
   void gen_sort_f_context(iterateur it,iterateur itend,bool (*f)(const gen &a,const gen &b,GIAC_CONTEXT),GIAC_CONTEXT);
   gen makemap(); // make a new map
-  gen chartab2gen(char * & s,GIAC_CONTEXT);
+  gen chartab2gen(char * s,GIAC_CONTEXT);
 
 
   bool is_zero(const gen & a,GIAC_CONTEXT0);
