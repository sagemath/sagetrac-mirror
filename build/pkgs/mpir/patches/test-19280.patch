Include a test for the bug reported in http://trac.sagemath.org/ticket/19280 .
diff -ruN mpir-2.7.0/tests/mpz/Makefile.am mpir-2.7.0-patched/tests/mpz/Makefile.am
--- mpir-2.7.0/tests/mpz/Makefile.am	2015-06-09 19:18:27.000000000 +0200
+++ mpir-2.7.0-patched/tests/mpz/Makefile.am	2015-09-24 18:39:33.093974089 +0200
@@ -26,7 +26,7 @@
 AM_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/tests
 LDADD = $(top_builddir)/tests/libtests.la $(top_builddir)/libmpir.la
 
-check_PROGRAMS = bit convert dive dive_ui io logic reuse t-addsub t-aorsmul t-bin t-cdiv_ui t-cmp t-cmp_d t-cmp_si t-cong t-cong_2exp t-div_2exp t-divis t-divis_2exp t-export t-fac_ui t-fdiv t-fdiv_ui t-fib_ui t-fits t-gcd t-gcd_ui t-get_d t-get_d_2exp t-get_si t-get_sx t-get_ux t-hamdist t-import t-inp_str t-io_raw t-jac t-lcm t-likely_prime_p t-lucnum_ui t-mfac_uiui t-mul t-mul_i t-next_prime_candidate t-oddeven t-perfpow t-perfsqr t-popcount t-pow t-powm t-powm_ui t-pprime_p t-primorial_ui t-root t-scan t-set_d t-set_f t-set_si t-set_str t-set_sx t-set_ux t-sizeinbase t-sqrtrem t-tdiv t-tdiv_ui t-trial_division 
+check_PROGRAMS = bit convert dive dive_ui io logic reuse t-addsub t-aorsmul t-bin t-cdiv_ui t-cmp t-cmp_d t-cmp_si t-cong t-cong_2exp t-div_2exp t-divis t-divis_2exp t-export t-fac_ui t-fdiv t-fdiv_ui t-fib_ui t-fits t-gcd t-gcd_ui t-get_d t-get_d_2exp t-get_si t-get_sx t-get_ux t-hamdist t-import t-inp_str t-io_raw t-jac t-lcm t-likely_prime_p t-lucnum_ui t-mfac_uiui t-mul t-mul_i t-next_prime_candidate t-oddeven t-perfpow t-perfsqr t-popcount t-pow t-powm t-powm_ui t-pprime_p t-primorial_ui t-root t-scan t-set_d t-set_f t-set_si t-set_str t-set_sx t-set_ux t-sizeinbase t-sqrtrem t-tdiv t-tdiv_ui t-trial_division t-19280
 
 if ENABLE_STATIC
 if ENABLE_SHARED
diff -ruN mpir-2.7.0/tests/mpz/Makefile.in mpir-2.7.0-patched/tests/mpz/Makefile.in
--- mpir-2.7.0/tests/mpz/Makefile.in	2015-06-16 12:40:00.000000000 +0200
+++ mpir-2.7.0-patched/tests/mpz/Makefile.in	2015-09-24 18:42:37.485967609 +0200
@@ -121,7 +121,7 @@
 	t-set_si$(EXEEXT) t-set_str$(EXEEXT) t-set_sx$(EXEEXT) \
 	t-set_ux$(EXEEXT) t-sizeinbase$(EXEEXT) t-sqrtrem$(EXEEXT) \
 	t-tdiv$(EXEEXT) t-tdiv_ui$(EXEEXT) t-trial_division$(EXEEXT) \
-	$(am__EXEEXT_1)
+	t-19280$(EXEEXT) $(am__EXEEXT_1)
 @ENABLE_SHARED_TRUE@@ENABLE_STATIC_TRUE@am__append_1 = st_hamdist st_popcount
 subdir = tests/mpz
 DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
@@ -197,6 +197,11 @@
 st_popcount_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
 	$(st_popcount_LDFLAGS) $(LDFLAGS) -o $@
+t_19280_SOURCES = t-19280.c
+t_19280_OBJECTS = t-19280.$(OBJEXT)
+t_19280_LDADD = $(LDADD)
+t_19280_DEPENDENCIES = $(top_builddir)/tests/libtests.la \
+	$(top_builddir)/libmpir.la
 t_addsub_SOURCES = t-addsub.c
 t_addsub_OBJECTS = t-addsub.$(OBJEXT)
 t_addsub_LDADD = $(LDADD)
@@ -526,21 +531,7 @@
 am__v_CCLD_0 = @echo "  CCLD    " $@;
 am__v_CCLD_1 = 
 SOURCES = bit.c convert.c dive.c dive_ui.c io.c logic.c reuse.c \
-	$(st_hamdist_SOURCES) $(st_popcount_SOURCES) t-addsub.c \
-	t-aorsmul.c t-bin.c t-cdiv_ui.c t-cmp.c t-cmp_d.c t-cmp_si.c \
-	t-cong.c t-cong_2exp.c t-div_2exp.c t-divis.c t-divis_2exp.c \
-	t-export.c t-fac_ui.c t-fdiv.c t-fdiv_ui.c t-fib_ui.c t-fits.c \
-	t-gcd.c t-gcd_ui.c t-get_d.c t-get_d_2exp.c t-get_si.c \
-	t-get_sx.c t-get_ux.c t-hamdist.c t-import.c t-inp_str.c \
-	t-io_raw.c t-jac.c t-lcm.c t-likely_prime_p.c t-lucnum_ui.c \
-	t-mfac_uiui.c t-mul.c t-mul_i.c t-next_prime_candidate.c \
-	t-oddeven.c t-perfpow.c t-perfsqr.c t-popcount.c t-pow.c \
-	t-powm.c t-powm_ui.c t-pprime_p.c t-primorial_ui.c t-root.c \
-	t-scan.c t-set_d.c t-set_f.c t-set_si.c t-set_str.c t-set_sx.c \
-	t-set_ux.c t-sizeinbase.c t-sqrtrem.c t-tdiv.c t-tdiv_ui.c \
-	t-trial_division.c
-DIST_SOURCES = bit.c convert.c dive.c dive_ui.c io.c logic.c reuse.c \
-	$(am__st_hamdist_SOURCES_DIST) $(am__st_popcount_SOURCES_DIST) \
+	$(st_hamdist_SOURCES) $(st_popcount_SOURCES) t-19280.c \
 	t-addsub.c t-aorsmul.c t-bin.c t-cdiv_ui.c t-cmp.c t-cmp_d.c \
 	t-cmp_si.c t-cong.c t-cong_2exp.c t-div_2exp.c t-divis.c \
 	t-divis_2exp.c t-export.c t-fac_ui.c t-fdiv.c t-fdiv_ui.c \
@@ -554,6 +545,21 @@
 	t-set_f.c t-set_si.c t-set_str.c t-set_sx.c t-set_ux.c \
 	t-sizeinbase.c t-sqrtrem.c t-tdiv.c t-tdiv_ui.c \
 	t-trial_division.c
+DIST_SOURCES = bit.c convert.c dive.c dive_ui.c io.c logic.c reuse.c \
+	$(am__st_hamdist_SOURCES_DIST) $(am__st_popcount_SOURCES_DIST) \
+	t-19280.c t-addsub.c t-aorsmul.c t-bin.c t-cdiv_ui.c t-cmp.c \
+	t-cmp_d.c t-cmp_si.c t-cong.c t-cong_2exp.c t-div_2exp.c \
+	t-divis.c t-divis_2exp.c t-export.c t-fac_ui.c t-fdiv.c \
+	t-fdiv_ui.c t-fib_ui.c t-fits.c t-gcd.c t-gcd_ui.c t-get_d.c \
+	t-get_d_2exp.c t-get_si.c t-get_sx.c t-get_ux.c t-hamdist.c \
+	t-import.c t-inp_str.c t-io_raw.c t-jac.c t-lcm.c \
+	t-likely_prime_p.c t-lucnum_ui.c t-mfac_uiui.c t-mul.c \
+	t-mul_i.c t-next_prime_candidate.c t-oddeven.c t-perfpow.c \
+	t-perfsqr.c t-popcount.c t-pow.c t-powm.c t-powm_ui.c \
+	t-pprime_p.c t-primorial_ui.c t-root.c t-scan.c t-set_d.c \
+	t-set_f.c t-set_si.c t-set_str.c t-set_sx.c t-set_ux.c \
+	t-sizeinbase.c t-sqrtrem.c t-tdiv.c t-tdiv_ui.c \
+	t-trial_division.c
 am__can_run_installinfo = \
   case $$AM_UPDATE_INFO_DIR in \
     n|no|NO) false;; \
@@ -1020,6 +1026,10 @@
 	@rm -f st_popcount$(EXEEXT)
 	$(AM_V_CCLD)$(st_popcount_LINK) $(st_popcount_OBJECTS) $(st_popcount_LDADD) $(LIBS)
 
+t-19280$(EXEEXT): $(t_19280_OBJECTS) $(t_19280_DEPENDENCIES) $(EXTRA_t_19280_DEPENDENCIES) 
+	@rm -f t-19280$(EXEEXT)
+	$(AM_V_CCLD)$(LINK) $(t_19280_OBJECTS) $(t_19280_LDADD) $(LIBS)
+
 t-addsub$(EXEEXT): $(t_addsub_OBJECTS) $(t_addsub_DEPENDENCIES) $(EXTRA_t_addsub_DEPENDENCIES) 
 	@rm -f t-addsub$(EXEEXT)
 	$(AM_V_CCLD)$(LINK) $(t_addsub_OBJECTS) $(t_addsub_LDADD) $(LIBS)
@@ -1931,6 +1941,13 @@
 	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
 	--log-file $$b.log --trs-file $$b.trs \
 	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
+	"$$tst" $(AM_TESTS_FD_REDIRECT)
+t-19280.log: t-19280$(EXEEXT)
+	@p='t-19280$(EXEEXT)'; \
+	b='t-19280'; \
+	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
+	--log-file $$b.log --trs-file $$b.trs \
+	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
 	"$$tst" $(AM_TESTS_FD_REDIRECT)
 st_hamdist.log: st_hamdist$(EXEEXT)
 	@p='st_hamdist$(EXEEXT)'; \
diff -ruN mpir-2.7.0/tests/mpz/t-19280.c mpir-2.7.0-patched/tests/mpz/t-19280.c
--- mpir-2.7.0/tests/mpz/t-19280.c	1970-01-01 01:00:00.000000000 +0100
+++ mpir-2.7.0-patched/tests/mpz/t-19280.c	2015-09-24 18:57:03.005937190 +0200
@@ -0,0 +1,50 @@
+/* Test t-19280.
+
+*/
+
+#include <stdio.h>
+#include <stdlib.h>
+
+#include "mpir.h"
+#include "gmp-impl.h"
+#include "tests.h"
+
+#define printf gmp_printf
+
+/* Check mpz_tdif_q gives a correct answer on 32-bit, 
+   see http://trac.sagemath.org/ticket/19280.
+   This was wrong in sage 6.9.beta7.  */
+static void
+check_19280 (void)
+{
+
+    mpz_t one, x, w, correct;
+    mpz_init(one);
+    mpz_init(x);
+    mpz_init(w);
+    mpz_init(correct);
+    mpz_set_str(one, "62165404551223330269422781018352605012557018849668464680057997111644937126566671941632", 10);
+    mpz_set_str(x, "39623752663112484341451587580", 10);
+    mpz_set_str(correct, "1568892403497558507879962225846103176600476845510570267609", 10);
+
+    mpz_tdiv_q(w, one, x);
+    if (mpz_cmp(w, correct)!=0) {
+      printf("mpz_tdiv_q returned %Zd instead of %Zd.\n", w, correct);
+      abort();
+    }
+    mpz_clear(one);
+    mpz_clear(x);
+    mpz_clear(w);
+    mpz_clear(correct);
+}
+
+int
+main (void)
+{
+  tests_start ();
+
+  check_19280 ();
+
+  tests_end ();
+  exit (0);
+}
