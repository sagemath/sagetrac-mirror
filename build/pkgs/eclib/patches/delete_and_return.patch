diff --git a/libsrc/eclib/sieve_search.h b/libsrc/eclib/sieve_search.h
index 490920f..a7a7a8b 100644
--- a/libsrc/eclib/sieve_search.h
+++ b/libsrc/eclib/sieve_search.h
@@ -76,7 +76,7 @@ class point_counter : public point_processor {
 #define QS_LONG_SHIFT ((QS_LONG_LENGTH == 16) ? 4 : \
                     (QS_LONG_LENGTH == 32) ? 5 : \
 		    (QS_LONG_LENGTH == 64) ? 6 : 0)
-#define QS_LONG_MASK (~(-1L<<QS_LONG_SHIFT))
+#define QS_LONG_MASK (~(-(1L<<QS_LONG_SHIFT)))
 #define QS_HALF_MASK ((bit_array)(~((unsigned long)(-1L) / 3)))
 
      //#define PERCENT 0.6
diff --git a/libsrc/htconst.cc b/libsrc/htconst.cc
index f43e127..ebef995 100644
--- a/libsrc/htconst.cc
+++ b/libsrc/htconst.cc
@@ -109,6 +109,7 @@ double egr_height_constant(const Curvedata& CD)
   double bd = cps_real(I2bigfloat(getb2(CD)),I2bigfloat(getb4(CD)),
 		     I2bigfloat(getb6(CD)),I2bigfloat(getb8(CD)));
   if (bd==0) bd=0; // otherwise the output sometimes prints as "-0"
+  return bd;
 }
 
 double cps_bound(const Curvedata& CD)
diff --git a/libsrc/newforms.cc b/libsrc/newforms.cc
index 23f8668..11ff3fd 100644
--- a/libsrc/newforms.cc
+++ b/libsrc/newforms.cc
@@ -1665,7 +1665,7 @@ void newforms::createfromolddata()
     for(i=0; i<n1ds; i++) 
       ap[i][j]=*batchptr++;
   //  cout<<"Raw  ap:\n";  for(i=0; i<n1ds; i++) cout<<ap[i]<<endl;
-  delete batch;
+  delete[] batch;
 
   // extract aq for each newform
   vector<long> * aq = new vector<long>[n1ds];
diff --git a/progs/aplist.cc b/progs/aplist.cc
index e8a3d23..7dcfb09 100644
--- a/progs/aplist.cc
+++ b/progs/aplist.cc
@@ -62,7 +62,7 @@ int main()
 	      long ntotal = 16*nnf;
 	      int* batch_i = new int[ntotal];
 	      datafile.read((char*)batch_i,ntotal*sizeof(int));
-	      delete batch_i;
+	      delete[] batch_i;
 
 	      // read and store aq for each newform
 	      ntotal = naq*nnf;
@@ -76,7 +76,7 @@ int main()
 
 	      // read and store ap for each newform
 	      ntotal = 25*nnf;
-	      delete batch;
+	      delete[] batch;
 	      batch = new short[ntotal];
 	      datafile.read((char*)batch,ntotal*sizeof(short));
 	      batchptr = batch;
@@ -113,7 +113,7 @@ int main()
 		  for(ic=0; ic<nnf; ic++) aptable[ic][ip]=*batchptr++;
 		  ip++;
 		}
-	      delete batch;
+	      delete[] batch;
 	      datafile.close();
 	      //        cout<<"finished reading eigs, closed data file."<<endl;
           for (xic=0; xic<nnf; xic++)
diff --git a/progs/checkap.cc b/progs/checkap.cc
index fac5aba..b96a57e 100644
--- a/progs/checkap.cc
+++ b/progs/checkap.cc
@@ -69,7 +69,7 @@ int main(void)
 	      
 	      // read and check ap for each newform
 	      ntotal = nap*nnf;
-	      delete batch;
+	      delete[] batch;
 	      batch = new short[ntotal];
 	      datafile.read((char*)batch,ntotal*sizeof(short));
 	      short* batchptr = batch;
@@ -88,7 +88,7 @@ int main(void)
 			}
 		    }
 		}
-	      delete batch;
+	      delete[] batch;
 	    } // ends if(nnf>0)
 	} // ends if(datafile)
 	    
