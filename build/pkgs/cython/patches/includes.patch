Update Cython/Includes to upstream master

diff --git a/Cython/Includes/cpython/bytes.pxd b/Cython/Includes/cpython/bytes.pxd
index 2fb3502..ea72c6a 100644
--- a/Cython/Includes/cpython/bytes.pxd
+++ b/Cython/Includes/cpython/bytes.pxd
@@ -1,4 +1,4 @@
-from cpython.ref cimport PyObject
+from cpython.object cimport PyObject
 
 cdef extern from "Python.h":
     ctypedef struct va_list
diff --git a/Cython/Includes/cpython/cobject.pxd b/Cython/Includes/cpython/cobject.pxd
index 62c4706..497d8a9 100644
--- a/Cython/Includes/cpython/cobject.pxd
+++ b/Cython/Includes/cpython/cobject.pxd
@@ -1,4 +1,3 @@
-from cpython.ref cimport PyObject
 
 cdef extern from "Python.h":
 
diff --git a/Cython/Includes/cpython/datetime.pxd b/Cython/Includes/cpython/datetime.pxd
index 3c6f8a7..2e0c4bd 100644
--- a/Cython/Includes/cpython/datetime.pxd
+++ b/Cython/Includes/cpython/datetime.pxd
@@ -1,4 +1,4 @@
-from cpython.ref cimport PyObject
+from cpython.object cimport PyObject
 
 cdef extern from "Python.h":
     ctypedef struct PyTypeObject:
diff --git a/Cython/Includes/cpython/dict.pxd b/Cython/Includes/cpython/dict.pxd
index 69a416a..d58faea 100644
--- a/Cython/Includes/cpython/dict.pxd
+++ b/Cython/Includes/cpython/dict.pxd
@@ -1,4 +1,4 @@
-from cpython.ref cimport PyObject
+from cpython.object cimport PyObject
 
 cdef extern from "Python.h":
 
diff --git a/Cython/Includes/cpython/exc.pxd b/Cython/Includes/cpython/exc.pxd
index 89beb21..2e4eda5 100644
--- a/Cython/Includes/cpython/exc.pxd
+++ b/Cython/Includes/cpython/exc.pxd
@@ -1,4 +1,4 @@
-from cpython.ref cimport PyObject
+from cpython.object cimport PyObject
 
 cdef extern from "Python.h":
 
diff --git a/Cython/Includes/cpython/function.pxd b/Cython/Includes/cpython/function.pxd
index e8e4f06..0002a3f 100644
--- a/Cython/Includes/cpython/function.pxd
+++ b/Cython/Includes/cpython/function.pxd
@@ -1,4 +1,4 @@
-from cpython.ref cimport PyObject
+from cpython.object cimport PyObject
 
 cdef extern from "Python.h":
 
diff --git a/Cython/Includes/cpython/getargs.pxd b/Cython/Includes/cpython/getargs.pxd
index 591aefb..be6df32 100644
--- a/Cython/Includes/cpython/getargs.pxd
+++ b/Cython/Includes/cpython/getargs.pxd
@@ -1,4 +1,3 @@
-from cpython.ref cimport PyObject
 
 cdef extern from "Python.h":
     #####################################################################
diff --git a/Cython/Includes/cpython/list.pxd b/Cython/Includes/cpython/list.pxd
index 5cfd573..c6a2953 100644
--- a/Cython/Includes/cpython/list.pxd
+++ b/Cython/Includes/cpython/list.pxd
@@ -1,4 +1,4 @@
-from cpython.ref cimport PyObject
+from cpython.object cimport PyObject
 
 cdef extern from "Python.h":
 
diff --git a/Cython/Includes/cpython/method.pxd b/Cython/Includes/cpython/method.pxd
index bc09416..f51ebcc 100644
--- a/Cython/Includes/cpython/method.pxd
+++ b/Cython/Includes/cpython/method.pxd
@@ -1,5 +1,6 @@
+from cpython.object cimport PyObject
+
 cdef extern from "Python.h":
-    ctypedef void PyObject
     ############################################################################
     # 7.5.4 Method Objects
     ############################################################################
diff --git a/Cython/Includes/cpython/module.pxd b/Cython/Includes/cpython/module.pxd
index c821896..f36b989 100644
--- a/Cython/Includes/cpython/module.pxd
+++ b/Cython/Includes/cpython/module.pxd
@@ -1,4 +1,4 @@
-from cpython.ref cimport PyObject
+from cpython.object cimport PyObject
 
 cdef extern from "Python.h":
     ctypedef struct _inittab
diff --git a/Cython/Includes/cpython/number.pxd b/Cython/Includes/cpython/number.pxd
index 346546e..3ad8de5 100644
--- a/Cython/Includes/cpython/number.pxd
+++ b/Cython/Includes/cpython/number.pxd
@@ -1,4 +1,4 @@
-from cpython.ref cimport PyObject
+from cpython.object cimport PyObject
 
 cdef extern from "Python.h":
 
diff --git a/Cython/Includes/cpython/object.pxd b/Cython/Includes/cpython/object.pxd
index d861965..6dc3022 100644
--- a/Cython/Includes/cpython/object.pxd
+++ b/Cython/Includes/cpython/object.pxd
@@ -1,8 +1,61 @@
-from cpython.ref cimport PyObject, PyTypeObject
 from libc.stdio cimport FILE
+cimport cpython.type
 
 cdef extern from "Python.h":
 
+    ctypedef struct PyObject  # forward declaration
+
+    ctypedef object (*newfunc)(cpython.type.type, object, object)  # (type, args, kwargs)
+
+    ctypedef object (*unaryfunc)(object)
+    ctypedef object (*binaryfunc)(object, object)
+    ctypedef object (*ternaryfunc)(object, object, object)
+    ctypedef int (*inquiry)(object)
+    ctypedef Py_ssize_t (*lenfunc)(object)
+    ctypedef object (*ssizeargfunc)(object, Py_ssize_t)
+    ctypedef object (*ssizessizeargfunc)(object, Py_ssize_t, Py_ssize_t)
+    ctypedef int (*ssizeobjargproc)(object, Py_ssize_t, object)
+    ctypedef int (*ssizessizeobjargproc)(object, Py_ssize_t, Py_ssize_t, object)
+    ctypedef int (*objobjargproc)(object, object, object)
+    ctypedef int (*objobjproc)(object, object)
+
+    ctypedef Py_hash_t (*hashfunc)(object)
+    ctypedef object (*reprfunc)(object)
+
+    # The following functions use 'PyObject*' as first argument instead of 'object' to prevent
+    # accidental reference counting when calling them during a garbage collection run.
+    ctypedef void (*destructor)(PyObject*)
+    ctypedef int (*visitproc)(PyObject*, void *)
+    ctypedef int (*traverseproc)(PyObject*, visitproc, void*)
+
+    ctypedef struct PyTypeObject:
+        const char* tp_name
+        const char* tp_doc
+        Py_ssize_t tp_basicsize
+        Py_ssize_t tp_itemsize
+        Py_ssize_t tp_dictoffset
+        unsigned long tp_flags
+
+        newfunc tp_new
+        destructor tp_dealloc
+        traverseproc tp_traverse
+        inquiry tp_clear
+
+        ternaryfunc tp_call
+        hashfunc tp_hash
+        reprfunc tp_str
+        reprfunc tp_repr
+
+    ctypedef struct PyObject:
+        Py_ssize_t ob_refcnt
+        PyTypeObject *ob_type
+
+    cdef PyTypeObject *Py_TYPE(object)
+
+    void* PyObject_Malloc(size_t)
+    void* PyObject_Realloc(void *, size_t)
+    void PyObject_Free(void *)
+
     #####################################################################
     # 6.1 Object Protocol
     #####################################################################
diff --git a/Cython/Includes/cpython/pycapsule.pxd b/Cython/Includes/cpython/pycapsule.pxd
index f0b326b..449f369 100644
--- a/Cython/Includes/cpython/pycapsule.pxd
+++ b/Cython/Includes/cpython/pycapsule.pxd
@@ -1,4 +1,3 @@
-from cpython.ref cimport PyObject
 
 # available since Python 3.1!
 
diff --git a/Cython/Includes/cpython/pystate.pxd b/Cython/Includes/cpython/pystate.pxd
index d53259f..f58503f 100644
--- a/Cython/Includes/cpython/pystate.pxd
+++ b/Cython/Includes/cpython/pystate.pxd
@@ -1,6 +1,6 @@
 # Thread and interpreter state structures and their interfaces
 
-from cpython.ref cimport PyObject
+from cpython.object cimport PyObject
 
 cdef extern from "Python.h":
 
diff --git a/Cython/Includes/cpython/ref.pxd b/Cython/Includes/cpython/ref.pxd
index 63ee54b..4bc9a7d 100644
--- a/Cython/Includes/cpython/ref.pxd
+++ b/Cython/Includes/cpython/ref.pxd
@@ -1,15 +1,6 @@
-cdef extern from "Python.h":
-    ctypedef struct PyTypeObject:
-        Py_ssize_t tp_basicsize
-        Py_ssize_t tp_itemsize
-        long tp_flags
-
-    ctypedef struct PyObject:
-        Py_ssize_t ob_refcnt
-        PyTypeObject *ob_type
-    cdef PyTypeObject *Py_TYPE(object)
-
+from cpython.object cimport PyObject, PyTypeObject, Py_TYPE  # legacy imports for re-export
 
+cdef extern from "Python.h":
     #####################################################################
     # 3. Reference Counts
     #####################################################################
diff --git a/Cython/Includes/cpython/sequence.pxd b/Cython/Includes/cpython/sequence.pxd
index 61ddca2..eb27996 100644
--- a/Cython/Includes/cpython/sequence.pxd
+++ b/Cython/Includes/cpython/sequence.pxd
@@ -1,4 +1,4 @@
-from cpython.ref cimport PyObject
+from cpython.object cimport PyObject
 
 cdef extern from "Python.h":
 
diff --git a/Cython/Includes/cpython/string.pxd b/Cython/Includes/cpython/string.pxd
index 65c6d37..8af78f3 100644
--- a/Cython/Includes/cpython/string.pxd
+++ b/Cython/Includes/cpython/string.pxd
@@ -1,4 +1,4 @@
-from cpython.ref cimport PyObject
+from cpython.object cimport PyObject
 
 cdef extern from "Python.h":
     ctypedef struct va_list
diff --git a/Cython/Includes/cpython/tuple.pxd b/Cython/Includes/cpython/tuple.pxd
index 6da2890..6564b50 100644
--- a/Cython/Includes/cpython/tuple.pxd
+++ b/Cython/Includes/cpython/tuple.pxd
@@ -1,4 +1,4 @@
-from cpython.ref cimport PyObject
+from cpython.object cimport PyObject
 
 cdef extern from "Python.h":
 
diff --git a/Cython/Includes/cpython/weakref.pxd b/Cython/Includes/cpython/weakref.pxd
index 8f51052..ae710be 100644
--- a/Cython/Includes/cpython/weakref.pxd
+++ b/Cython/Includes/cpython/weakref.pxd
@@ -1,4 +1,4 @@
-from cpython.ref cimport PyObject
+from cpython.object cimport PyObject
 
 cdef extern from "Python.h":
 
diff --git a/Cython/Includes/numpy/__init__.pxd b/Cython/Includes/numpy/__init__.pxd
index edb1dbf..0ad89f7 100644
--- a/Cython/Includes/numpy/__init__.pxd
+++ b/Cython/Includes/numpy/__init__.pxd
@@ -241,7 +241,6 @@ cdef extern from "numpy/arrayobject.h":
             cdef int t
             cdef char* f = NULL
             cdef dtype descr = self.descr
-            cdef list stack
             cdef int offset
 
             cdef bint hasfields = PyDataType_HASFIELDS(descr)
@@ -788,8 +787,6 @@ cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset
     # string. The new location in the format string is returned.
 
     cdef dtype child
-    cdef int delta_offset
-    cdef tuple i
     cdef int endian_detector = 1
     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
     cdef tuple fields
