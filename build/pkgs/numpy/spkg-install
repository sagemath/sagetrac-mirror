# Make sure we do not include conflicting complex.h from cephes Sage package
CFLAGS="$CFLAGS -D__CEPHES_COMPLEX_H"
export CFLAGS

cd src

set -e

if [ `uname` = "Darwin" ]; then
    unset ATLAS
    unset BLAS
    unset LAPACK
else
    export {ATLAS,PTATLAS,OPENBLAS,MKL,MKLROOT}=None
    export LDFLAGS="${LDFLAGS} -shared"
fi

sage-python23 ../lapack_conf.py

# Make sure that the fortran objects are compiled with -fPIC
export FFLAGS="$FFLAGS -fPIC"
export FCFLAGS="$FCFLAGS -fPIC"

export NUMPY_FCONFIG="config_fc --noopt --noarch"

################################################

rm -rf "$SAGE_LOCAL/lib/python*/site-packages/numpy"

sage-python23 setup.py \
        --no-user-cfg \
       install \
       --single-version-externally-managed \
       --root "$SAGE_DESTDIR" \
       ${NUMPY_FCONFIG} || sdh_die "Error building / installing numpy"

# Touch all includes such that dependency checking works properly:
# the timestamp of the includes should be *now*, not the time when
# the numpy package was created.
# Note: Setting PYTHONPATH here is something of a hack to support
# installation into $SAGE_DESTDIR.  This might be better handled
# as a post-install step
SITE_PACKAGES="$(sage-python23 -c 'import site; print(site.getsitepackages()[0])')"
PYTHONPATH="$SAGE_DESTDIR$SITE_PACKAGES" sage-python23 <<EOF
import os
os.chdir(os.environ["SAGE_ROOT"])  # Import numpy from safe location
import numpy
os.chdir(numpy.get_include())
os.system("touch numpy/*")
EOF
