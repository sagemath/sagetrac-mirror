On Cygwin, use mprotect to set PROT_NONE on a memory-mapped region, instead
of trying to reuse mmap on an existing region, which breaks.  Use the
allocation granularity for determining allocation sizes/offsets, rather
than the actual page size (as Cygwin itself does).  See
https://trac.sagemath.org/ticket/23973
diff --git a/os_dep.c b/os_dep.c
index e6283ac..a1bb9e4 100644
--- a/os_dep.c
+++ b/os_dep.c
@@ -698,7 +698,11 @@ GC_INNER word GC_page_size = 0;
   GC_INNER void GC_setpagesize(void)
   {
     GetSystemInfo(&GC_sysinfo);
-    GC_page_size = GC_sysinfo.dwPageSize;
+#   if defined(CYGWIN32) && defined(USE_MUNMAP)
+      GC_page_size = GC_sysinfo.dwAllocationGranularity;
+#   else
+      GC_page_size = GC_sysinfo.dwPageSize;
+#   endif
 #   if defined(MSWINCE) && !defined(_WIN32_WCE_EMULATION)
       {
         OSVERSIONINFO verInfo;
@@ -2404,12 +2408,18 @@ GC_INNER void GC_unmap(ptr_t start, size_t bytes)
       /* We immediately remap it to prevent an intervening mmap from    */
       /* accidentally grabbing the same address space.                  */
       {
-        void * result;
-        result = mmap(start_addr, len, PROT_NONE,
-                      MAP_PRIVATE | MAP_FIXED | OPT_MAP_ANON,
-                      zero_fd, 0/* offset */);
-        if (result != (void *)start_addr)
-          ABORT("mmap(PROT_NONE) failed");
+#       ifdef CYGWIN32
+          if (mprotect(start_addr, len, PROT_NONE))
+            ABORT("mprotect(PROT_NONE) failed");
+#       else
+          void * result;
+
+          result = mmap(start_addr, len, PROT_NONE,
+                        MAP_PRIVATE | MAP_FIXED | OPT_MAP_ANON,
+                        zero_fd, 0/* offset */);
+          if (result != (void *)start_addr)
+            ABORT("mmap(PROT_NONE) failed");
+#       endif
       }
       GC_unmapped_bytes += len;
 #   endif
@@ -2515,13 +2525,18 @@ GC_INNER void GC_unmap_gap(ptr_t start1, size_t bytes1, ptr_t start2,
       }
 #   else
       if (len != 0) {
+#       ifdef CYGWIN32
+          if (mprotect(start_addr, len, PROT_NONE))
+            ABORT("mprotect(PROT_NONE) failed");
+#       else
         /* Immediately remap as above. */
-        void * result;
-        result = mmap(start_addr, len, PROT_NONE,
-                      MAP_PRIVATE | MAP_FIXED | OPT_MAP_ANON,
-                      zero_fd, 0/* offset */);
-        if (result != (void *)start_addr)
-          ABORT("mmap(PROT_NONE) failed");
+          void * result;
+          result = mmap(start_addr, len, PROT_NONE,
+                        MAP_PRIVATE | MAP_FIXED | OPT_MAP_ANON,
+                        zero_fd, 0/* offset */);
+          if (result != (void *)start_addr)
+            ABORT("mmap(PROT_NONE) failed");
+#       endif
       }
       GC_unmapped_bytes += len;
 #   endif
-- 
2.8.3

