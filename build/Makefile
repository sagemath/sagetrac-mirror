#==============================================================================
# This file has been automatically generated by
#   /Users/rudi/Documents/Development/sage-6.7/build/install
# You should not edit it by hand
#==============================================================================

SHELL = /bin/bash

# All Sage packages
FOURTI2 = 4ti2-1.6.5
ARB = arb-2.6.0
ATLAS = atlas-3.10.2
AUTOTOOLS = autotools-20141105
BACKPORTS_SSL_MATCH_HOSTNAME = backports_ssl_match_hostname-3.4.0.2
BENZENE = benzene-20130630
BLISS = bliss-0.72.p1
BOEHM_GC = boehm_gc-7.2d.p0
BOOST_CROPPED = boost_cropped-1.52.0
BUCKYGEN = buckygen-1.0
BZIP2 = bzip2-1.0.6.20140317
CBC = cbc-2.9.4
CCACHE = ccache-3.2.2
CDDLIB = cddlib-094g.p0
CEPHES = cephes-2.8.p1
CERTIFI = certifi-14.05.14
CLIQUER = cliquer-1.21.p2
COMBINATORIAL_DESIGNS = combinatorial_designs-20140630
COMPILERWRAPPER = compilerwrapper-1.2
CONFIGURE = configure-102
CONWAY_POLYNOMIALS = conway_polynomials-0.4.p0
CRYPTOMINISAT = cryptominisat-2.9.6
CSDP = csdp-6.2
CVXOPT = cvxopt-1.1.7
CYTHON = cython-0.22.p5
D3JS = d3js-3.4.8
DATABASE_CREMONA_ELLCURVE = database_cremona_ellcurve-20150519
DATABASE_GAP = database_gap-4.7.8
DATABASE_ODLYZKO_ZETA = database_odlyzko_zeta-20061209
DATABASE_PARI = database_pari-20140908
DATABASE_STEIN_WATKINS = database_stein_watkins-20110713
DATABASE_STEIN_WATKINS_MINI = database_stein_watkins_mini-20070827
DATABASE_SYMBOLIC_DATA = database_symbolic_data-20070206
DATEUTIL = dateutil-2.2
DOCUTILS = docutils-0.12
DOT2TEX = dot2tex-2.9.0.p0
ECL = ecl-13.5.1.p0
ECLIB = eclib-20150510
ECM = ecm-6.4.4
ELLIPTIC_CURVES = elliptic_curves-0.7
FFLAS_FFPACK = fflas_ffpack-1.6.0.p1
FLINT = flint-2.4.5
FLINTQS = flintqs-20070817.p8
FREETYPE = freetype-2.5.2.p1
FRICAS = fricas-1.2.4
GAMBIT = gambit-14.1.0
GAP = gap-4.7.8
GAP_PACKAGES = gap_packages-4.7.8
GCC = gcc-4.9.2.p1
GDB = gdb-7.8
GF2X = gf2x-1.1.p1
GFAN = gfan-0.5.p0
GIAC = giac-1.2.0.13
GIACPY = giacpy-0.4.8
GIT = git-2.3.0
GIT_TRAC = git_trac-20150522
GIVARO = givaro-3.7.1
GLPK = glpk-4.55.p0
GMP = gmp-5.1.3
GRAPHS = graphs-20130920.p5
GSL = gsl-1.16
ICONV = iconv-1.14
IML = iml-1.0.4p1
IPYTHON = ipython-3.2.0
JINJA2 = jinja2-2.7.3
JMOL = jmol-14.2.11_2015.01.20
JSONSCHEMA = jsonschema-2.4.0
LATTE_INT = latte_int-1.7.3
LCALC = lcalc-1.23.p14
LIBFPLLL = libfplll-4.0.4
LIBGAP = libgap-4.7.8
LIBGD = libgd-2.1.1.p0
LIBOGG = libogg-1.3.1
LIBPNG = libpng-1.2.51.p0
LIBTHEORA = libtheora-1.1.1
LIDIA = lidia-2.3.0+latte-patches-2014-10-04
LINBOX = linbox-1.3.2.p1
LRCALC = lrcalc-1.1.7
LRSLIB = lrslib-051
M4RI = m4ri-20140914
M4RIE = m4rie-20140914
MARKUPSAFE = markupsafe-0.23
MATHJAX = mathjax-2.5
MATPLOTLIB = matplotlib-1.4.3
MAXIMA = maxima-5.35.1.p2
MCQD = mcqd-1.0
MISTUNE = mistune-0.5.1
MODULAR_DECOMPOSITION = modular_decomposition-20100607
MPC = mpc-1.0.2.p0
MPFI = mpfi-1.5.1
MPFR = mpfr-3.1.2.p0
MPIR = mpir-2.7.0
MPMATH = mpmath-0.18
NAUTY = nauty-25r9
NCURSES = ncurses-5.9.20131221
NETWORKX = networkx-1.8.1
NORMALIZ = normaliz-2.12.1.p0
NOSE = nose-1.3.3
NTL = ntl-9.2.0.p0
NUMPY = numpy-1.8.1.p0
OPENSSL = openssl-1.0.2c
PALP = palp-2.1.p1
PARI = pari-2.8-1637-g489005a.p0
PARI_GALDATA = pari_galdata-20080411
PARI_SEADATA_SMALL = pari_seadata_small-20090618
PATCH = patch-2.7.1
PEXPECT = pexpect-2.0.p6
PILLOW = pillow-2.2.2
PIP = pip-6.1.1
PKGCONF = pkgconf-0.9.7
PKGCONFIG = pkgconfig-1.1.0
PLANARITY = planarity-2.2.0
PLANTRI = plantri-4.5
POLYBORI = polybori-0.8.3
POLYTOPES_DB = polytopes_db-20120220
PPL = ppl-1.1
PYCRYPTO = pycrypto-2.6.1.p0
PYGMENTS = pygments-2.0.2.p0
PYNAC = pynac-0.3.9.1
PYPARSING = pyparsing-2.0.1
PYTHON2 = python2-2.7.9
PYTHON3 = python3-3.4.3
PYZMQ = pyzmq-14.3.0
R = r-3.2.1.p0
RATPOINTS = ratpoints-2.1.3.p3
READLINE = readline-6.3.008
RPY2 = rpy2-2.3.8
RUBIKS = rubiks-20070912.p18
RW = rw-0.7
SAGE_MODE = sage_mode-0.14
SAGENB = sagenb-0.11.4
SAGETEX = sagetex-2.3.4
SCIPY = scipy-0.14.0
SCONS = scons-1.2.0
SETUPTOOLS = setuptools-12.4
SINGULAR = singular-3.1.7p1.p0
SIX = six-1.9.0
SPHINX = sphinx-1.2.2.p0
SQLITE = sqlite-3.8.4.3
SYMMETRICA = symmetrica-2.0.p9
SYMPOW = sympow-1.018.1.p11
SYMPY = sympy-0.7.6
TACHYON = tachyon-0.98.9.p5
TERMCAP = termcap-1.3.1.p3
THREEJS = threejs-r70
TIDES = tides-2.0
TOPCOM = topcom-0.17.4.p0
TORNADO = tornado-4.1
VALGRIND = valgrind-3.10.0
ZEROMQ = zeromq-4.0.5
ZLIB = zlib-1.2.8.p0
ZN_POLY = zn_poly-0.9.p11

# Directory to keep track of which packages are installed
INST=/Users/rudi/Documents/Development/sage-6.7/local/var/lib/sage/installed

# Aliases for optional packages selected at build time
PYTHON = $(PYTHON2)
SAGE_MP_LIBRARY = $(MPIR)
TOOLCHAIN =

# All standard packages
STANDARD_PACKAGES = \
    $(INST)/$(ATLAS) \
    $(INST)/$(BACKPORTS_SSL_MATCH_HOSTNAME) \
    $(INST)/$(BOEHM_GC) \
    $(INST)/$(BOOST_CROPPED) \
    $(INST)/$(BZIP2) \
    $(INST)/$(CDDLIB) \
    $(INST)/$(CEPHES) \
    $(INST)/$(CERTIFI) \
    $(INST)/$(CLIQUER) \
    $(INST)/$(COMBINATORIAL_DESIGNS) \
    $(INST)/$(CONWAY_POLYNOMIALS) \
    $(INST)/$(CVXOPT) \
    $(INST)/$(CYTHON) \
    $(INST)/$(DATEUTIL) \
    $(INST)/$(DOCUTILS) \
    $(INST)/$(ECL) \
    $(INST)/$(ECLIB) \
    $(INST)/$(ECM) \
    $(INST)/$(ELLIPTIC_CURVES) \
    $(INST)/$(FFLAS_FFPACK) \
    $(INST)/$(FLINT) \
    $(INST)/$(FLINTQS) \
    $(INST)/$(FREETYPE) \
    $(INST)/$(GAP) \
    $(INST)/$(GF2X) \
    $(INST)/$(GFAN) \
    $(INST)/$(GIT) \
    $(INST)/$(GIVARO) \
    $(INST)/$(GLPK) \
    $(INST)/$(GRAPHS) \
    $(INST)/$(GSL) \
    $(INST)/$(ICONV) \
    $(INST)/$(IML) \
    $(INST)/$(IPYTHON) \
    $(INST)/$(JINJA2) \
    $(INST)/$(JMOL) \
    $(INST)/$(JSONSCHEMA) \
    $(INST)/$(LCALC) \
    $(INST)/$(LIBFPLLL) \
    $(INST)/$(LIBGAP) \
    $(INST)/$(LIBGD) \
    $(INST)/$(LIBPNG) \
    $(INST)/$(LINBOX) \
    $(INST)/$(LRCALC) \
    $(INST)/$(M4RI) \
    $(INST)/$(M4RIE) \
    $(INST)/$(MARKUPSAFE) \
    $(INST)/$(MATHJAX) \
    $(INST)/$(MATPLOTLIB) \
    $(INST)/$(MAXIMA) \
    $(INST)/$(MISTUNE) \
    $(INST)/$(MPC) \
    $(INST)/$(MPFI) \
    $(INST)/$(MPFR) \
    $(INST)/$(MPMATH) \
    $(INST)/$(NCURSES) \
    $(INST)/$(NETWORKX) \
    $(INST)/$(NTL) \
    $(INST)/$(NUMPY) \
    $(INST)/$(PALP) \
    $(INST)/$(PARI) \
    $(INST)/$(PARI_GALDATA) \
    $(INST)/$(PARI_SEADATA_SMALL) \
    $(INST)/$(PATCH) \
    $(INST)/$(PEXPECT) \
    $(INST)/$(PILLOW) \
    $(INST)/$(PIP) \
    $(INST)/$(PKGCONF) \
    $(INST)/$(PKGCONFIG) \
    $(INST)/$(PLANARITY) \
    $(INST)/$(POLYBORI) \
    $(INST)/$(POLYTOPES_DB) \
    $(INST)/$(PPL) \
    $(INST)/$(PYCRYPTO) \
    $(INST)/$(PYGMENTS) \
    $(INST)/$(PYNAC) \
    $(INST)/$(PYPARSING) \
    $(INST)/$(PYZMQ) \
    $(INST)/$(R) \
    $(INST)/$(RATPOINTS) \
    $(INST)/$(READLINE) \
    $(INST)/$(RPY2) \
    $(INST)/$(RUBIKS) \
    $(INST)/$(RW) \
    $(INST)/$(SAGENB) \
    $(INST)/$(SAGETEX) \
    $(INST)/$(SCIPY) \
    $(INST)/$(SETUPTOOLS) \
    $(INST)/$(SINGULAR) \
    $(INST)/$(SIX) \
    $(INST)/$(SPHINX) \
    $(INST)/$(SQLITE) \
    $(INST)/$(SYMMETRICA) \
    $(INST)/$(SYMPOW) \
    $(INST)/$(SYMPY) \
    $(INST)/$(TACHYON) \
    $(INST)/$(TORNADO) \
    $(INST)/$(ZEROMQ) \
    $(INST)/$(ZLIB) \
    $(INST)/$(ZN_POLY) \


# All optional installed packages (triggers the auto-update)
OPTIONAL_INSTALLED_PACKAGES = \
    $(INST)/$(MPIR) \
    $(INST)/$(PYTHON2) \
    $(INST)/$(SCONS) \


SCRIPT_SOURCES = \
                 $(SAGE_SRC)/bin/math-readline \
                 $(SAGE_SRC)/bin/sage \
                 $(SAGE_SRC)/bin/sage-CSI \
                 $(SAGE_SRC)/bin/sage-CSI-helper.py \
                 $(SAGE_SRC)/bin/sage-README-osx.txt \
                 $(SAGE_SRC)/bin/sage-arch-env \
                 $(SAGE_SRC)/bin/sage-banner \
                 $(SAGE_SRC)/bin/sage-bdist \
                 $(SAGE_SRC)/bin/sage-cachegrind \
                 $(SAGE_SRC)/bin/sage-callgrind \
                 $(SAGE_SRC)/bin/sage-cleaner \
                 $(SAGE_SRC)/bin/sage-clone-source \
                 $(SAGE_SRC)/bin/sage-coverage \
                 $(SAGE_SRC)/bin/sage-coverageall \
                 $(SAGE_SRC)/bin/sage-cython \
                 $(SAGE_SRC)/bin/sage-dev \
                 $(SAGE_SRC)/bin/sage-download-file \
                 $(SAGE_SRC)/bin/sage-download-upstream \
                 $(SAGE_SRC)/bin/sage-env \
                 $(SAGE_SRC)/bin/sage-eval \
                 $(SAGE_SRC)/bin/sage-fix-pkg-checksums \
                 $(SAGE_SRC)/bin/sage-fixdoctests \
                 $(SAGE_SRC)/bin/sage-gdb-commands \
                 $(SAGE_SRC)/bin/sage-grep \
                 $(SAGE_SRC)/bin/sage-grepdoc \
                 $(SAGE_SRC)/bin/sage-inline-fortran \
                 $(SAGE_SRC)/bin/sage-ipython \
                 $(SAGE_SRC)/bin/sage-list-experimental \
                 $(SAGE_SRC)/bin/sage-list-optional \
                 $(SAGE_SRC)/bin/sage-list-packages \
                 $(SAGE_SRC)/bin/sage-list-standard \
                 $(SAGE_SRC)/bin/sage-location \
                 $(SAGE_SRC)/bin/sage-massif \
                 $(SAGE_SRC)/bin/sage-maxima.lisp \
                 $(SAGE_SRC)/bin/sage-native-execute \
                 $(SAGE_SRC)/bin/sage-notebook \
                 $(SAGE_SRC)/bin/sage-num-threads.py \
                 $(SAGE_SRC)/bin/sage-omega \
                 $(SAGE_SRC)/bin/sage-open \
                 $(SAGE_SRC)/bin/sage-pkg \
                 $(SAGE_SRC)/bin/sage-preparse \
                 $(SAGE_SRC)/bin/sage-pypkg-location \
                 $(SAGE_SRC)/bin/sage-python \
                 $(SAGE_SRC)/bin/sage-rebase.bat \
                 $(SAGE_SRC)/bin/sage-rebase.sh \
                 $(SAGE_SRC)/bin/sage-rebaseall.bat \
                 $(SAGE_SRC)/bin/sage-rebaseall.sh \
                 $(SAGE_SRC)/bin/sage-rst2sws \
                 $(SAGE_SRC)/bin/sage-rst2txt \
                 $(SAGE_SRC)/bin/sage-rsyncdist \
                 $(SAGE_SRC)/bin/sage-run \
                 $(SAGE_SRC)/bin/sage-run-cython \
                 $(SAGE_SRC)/bin/sage-runtests \
                 $(SAGE_SRC)/bin/sage-sdist \
                 $(SAGE_SRC)/bin/sage-spkg \
                 $(SAGE_SRC)/bin/sage-starts \
                 $(SAGE_SRC)/bin/sage-startuptime.py \
                 $(SAGE_SRC)/bin/sage-sws2rst \
                 $(SAGE_SRC)/bin/sage-update-src \
                 $(SAGE_SRC)/bin/sage-update-version \
                 $(SAGE_SRC)/bin/sage-upgrade \
                 $(SAGE_SRC)/bin/sage-valgrind \
                 $(SAGE_SRC)/bin/sage-version.sh \
                 $(SAGE_SRC)/bin/testcc.sh \
                 $(SAGE_SRC)/bin/testcflags.sh \
                 $(SAGE_SRC)/bin/testcxx.sh \

SCRIPTS = \
                 $(SAGE_LOCAL)/bin/math-readline \
                 $(SAGE_LOCAL)/bin/sage \
                 $(SAGE_LOCAL)/bin/sage-CSI \
                 $(SAGE_LOCAL)/bin/sage-CSI-helper.py \
                 $(SAGE_LOCAL)/bin/sage-README-osx.txt \
                 $(SAGE_LOCAL)/bin/sage-arch-env \
                 $(SAGE_LOCAL)/bin/sage-banner \
                 $(SAGE_LOCAL)/bin/sage-bdist \
                 $(SAGE_LOCAL)/bin/sage-cachegrind \
                 $(SAGE_LOCAL)/bin/sage-callgrind \
                 $(SAGE_LOCAL)/bin/sage-cleaner \
                 $(SAGE_LOCAL)/bin/sage-clone-source \
                 $(SAGE_LOCAL)/bin/sage-coverage \
                 $(SAGE_LOCAL)/bin/sage-coverageall \
                 $(SAGE_LOCAL)/bin/sage-cython \
                 $(SAGE_LOCAL)/bin/sage-dev \
                 $(SAGE_LOCAL)/bin/sage-download-file \
                 $(SAGE_LOCAL)/bin/sage-download-upstream \
                 $(SAGE_LOCAL)/bin/sage-env \
                 $(SAGE_LOCAL)/bin/sage-eval \
                 $(SAGE_LOCAL)/bin/sage-fix-pkg-checksums \
                 $(SAGE_LOCAL)/bin/sage-fixdoctests \
                 $(SAGE_LOCAL)/bin/sage-gdb-commands \
                 $(SAGE_LOCAL)/bin/sage-grep \
                 $(SAGE_LOCAL)/bin/sage-grepdoc \
                 $(SAGE_LOCAL)/bin/sage-inline-fortran \
                 $(SAGE_LOCAL)/bin/sage-ipython \
                 $(SAGE_LOCAL)/bin/sage-list-experimental \
                 $(SAGE_LOCAL)/bin/sage-list-optional \
                 $(SAGE_LOCAL)/bin/sage-list-packages \
                 $(SAGE_LOCAL)/bin/sage-list-standard \
                 $(SAGE_LOCAL)/bin/sage-location \
                 $(SAGE_LOCAL)/bin/sage-massif \
                 $(SAGE_LOCAL)/bin/sage-maxima.lisp \
                 $(SAGE_LOCAL)/bin/sage-native-execute \
                 $(SAGE_LOCAL)/bin/sage-notebook \
                 $(SAGE_LOCAL)/bin/sage-num-threads.py \
                 $(SAGE_LOCAL)/bin/sage-omega \
                 $(SAGE_LOCAL)/bin/sage-open \
                 $(SAGE_LOCAL)/bin/sage-pkg \
                 $(SAGE_LOCAL)/bin/sage-preparse \
                 $(SAGE_LOCAL)/bin/sage-pypkg-location \
                 $(SAGE_LOCAL)/bin/sage-python \
                 $(SAGE_LOCAL)/bin/sage-rebase.bat \
                 $(SAGE_LOCAL)/bin/sage-rebase.sh \
                 $(SAGE_LOCAL)/bin/sage-rebaseall.bat \
                 $(SAGE_LOCAL)/bin/sage-rebaseall.sh \
                 $(SAGE_LOCAL)/bin/sage-rst2sws \
                 $(SAGE_LOCAL)/bin/sage-rst2txt \
                 $(SAGE_LOCAL)/bin/sage-rsyncdist \
                 $(SAGE_LOCAL)/bin/sage-run \
                 $(SAGE_LOCAL)/bin/sage-run-cython \
                 $(SAGE_LOCAL)/bin/sage-runtests \
                 $(SAGE_LOCAL)/bin/sage-sdist \
                 $(SAGE_LOCAL)/bin/sage-spkg \
                 $(SAGE_LOCAL)/bin/sage-starts \
                 $(SAGE_LOCAL)/bin/sage-startuptime.py \
                 $(SAGE_LOCAL)/bin/sage-sws2rst \
                 $(SAGE_LOCAL)/bin/sage-update-src \
                 $(SAGE_LOCAL)/bin/sage-update-version \
                 $(SAGE_LOCAL)/bin/sage-upgrade \
                 $(SAGE_LOCAL)/bin/sage-valgrind \
                 $(SAGE_LOCAL)/bin/sage-version.sh \
                 $(SAGE_LOCAL)/bin/testcc.sh \
                 $(SAGE_LOCAL)/bin/testcflags.sh \
                 $(SAGE_LOCAL)/bin/testcxx.sh \

EXTCODE_SOURCES = \
                  $(SAGE_SRC)/ext/doctest/invalid/syntax_error.tachyon \
                  $(SAGE_SRC)/ext/doctest/rich_output/example.canvas3d \
                  $(SAGE_SRC)/ext/doctest/rich_output/example.dvi \
                  $(SAGE_SRC)/ext/doctest/rich_output/example.gif \
                  $(SAGE_SRC)/ext/doctest/rich_output/example.jpg \
                  $(SAGE_SRC)/ext/doctest/rich_output/example.pdf \
                  $(SAGE_SRC)/ext/doctest/rich_output/example.png \
                  $(SAGE_SRC)/ext/doctest/rich_output/example.svg \
                  $(SAGE_SRC)/ext/doctest/rich_output/example_jmol.spt.zip \
                  $(SAGE_SRC)/ext/doctest/rich_output/example_wavefront/scene.mtl \
                  $(SAGE_SRC)/ext/doctest/rich_output/example_wavefront/scene.obj \
                  $(SAGE_SRC)/ext/gap/console.g \
                  $(SAGE_SRC)/ext/gap/joyner/hurwitz_crv_rr_sp.gap \
                  $(SAGE_SRC)/ext/gap/joyner/modular_crv_rr_sp.gap \
                  $(SAGE_SRC)/ext/gap/sage.g \
                  $(SAGE_SRC)/ext/graphs/graph_plot_js.html \
                  $(SAGE_SRC)/ext/images/corner.png \
                  $(SAGE_SRC)/ext/images/evaluate.png \
                  $(SAGE_SRC)/ext/images/evaluate_over.png \
                  $(SAGE_SRC)/ext/images/favicon.ico \
                  $(SAGE_SRC)/ext/images/sagelogo.png \
                  $(SAGE_SRC)/ext/magma/latex/latex.m \
                  $(SAGE_SRC)/ext/magma/latex/latex.spec \
                  $(SAGE_SRC)/ext/magma/sage/basic.m \
                  $(SAGE_SRC)/ext/magma/sage/sage.spec \
                  $(SAGE_SRC)/ext/magma/spec \
                  $(SAGE_SRC)/ext/mwrank/PRIMES \
                  $(SAGE_SRC)/ext/notebook-ipython/logo-64x64.png \
                  $(SAGE_SRC)/ext/notebook-ipython/logo.svg \
                  $(SAGE_SRC)/ext/pari/buzzard/DimensionSk.g \
                  $(SAGE_SRC)/ext/pari/buzzard/genusn.g \
                  $(SAGE_SRC)/ext/pari/buzzard/Tpprog.g \
                  $(SAGE_SRC)/ext/pari/dokchitser/computel.gp \
                  $(SAGE_SRC)/ext/pari/dokchitser/ex-bsw \
                  $(SAGE_SRC)/ext/pari/dokchitser/ex-chgen \
                  $(SAGE_SRC)/ext/pari/dokchitser/ex-chqua \
                  $(SAGE_SRC)/ext/pari/dokchitser/ex-delta \
                  $(SAGE_SRC)/ext/pari/dokchitser/ex-eisen \
                  $(SAGE_SRC)/ext/pari/dokchitser/ex-gen2 \
                  $(SAGE_SRC)/ext/pari/dokchitser/ex-gen3 \
                  $(SAGE_SRC)/ext/pari/dokchitser/ex-gen4 \
                  $(SAGE_SRC)/ext/pari/dokchitser/ex-nf \
                  $(SAGE_SRC)/ext/pari/dokchitser/ex-shin \
                  $(SAGE_SRC)/ext/pari/dokchitser/ex-tau2 \
                  $(SAGE_SRC)/ext/pari/dokchitser/ex-zeta \
                  $(SAGE_SRC)/ext/pari/dokchitser/ex-zeta2 \
                  $(SAGE_SRC)/ext/pari/dokchitser/testall \
                  $(SAGE_SRC)/ext/pari/simon/ell.gp \
                  $(SAGE_SRC)/ext/pari/simon/ellcommon.gp \
                  $(SAGE_SRC)/ext/pari/simon/ellQ.gp \
                  $(SAGE_SRC)/ext/pari/simon/qfsolve.gp \
                  $(SAGE_SRC)/ext/pari/simon/resultant3.gp \
                  $(SAGE_SRC)/ext/pickle_jar/pickle_jar.tar.bz2 \
                  $(SAGE_SRC)/ext/texlive/package-list.txt \
                  $(SAGE_SRC)/ext/texlive/SPKG.txt \
                  $(SAGE_SRC)/ext/texlive/texlive-install \
                  $(SAGE_SRC)/ext/valgrind/pyalloc.supp \
                  $(SAGE_SRC)/ext/valgrind/sage-additional.supp \
                  $(SAGE_SRC)/ext/valgrind/sage.supp \

EXTCODE = \
                  $(SAGE_EXTCODE)/doctest/invalid/syntax_error.tachyon \
                  $(SAGE_EXTCODE)/doctest/rich_output/example.canvas3d \
                  $(SAGE_EXTCODE)/doctest/rich_output/example.dvi \
                  $(SAGE_EXTCODE)/doctest/rich_output/example.gif \
                  $(SAGE_EXTCODE)/doctest/rich_output/example.jpg \
                  $(SAGE_EXTCODE)/doctest/rich_output/example.pdf \
                  $(SAGE_EXTCODE)/doctest/rich_output/example.png \
                  $(SAGE_EXTCODE)/doctest/rich_output/example.svg \
                  $(SAGE_EXTCODE)/doctest/rich_output/example_jmol.spt.zip \
                  $(SAGE_EXTCODE)/doctest/rich_output/example_wavefront/scene.mtl \
                  $(SAGE_EXTCODE)/doctest/rich_output/example_wavefront/scene.obj \
                  $(SAGE_EXTCODE)/gap/console.g \
                  $(SAGE_EXTCODE)/gap/joyner/hurwitz_crv_rr_sp.gap \
                  $(SAGE_EXTCODE)/gap/joyner/modular_crv_rr_sp.gap \
                  $(SAGE_EXTCODE)/gap/sage.g \
                  $(SAGE_EXTCODE)/graphs/graph_plot_js.html \
                  $(SAGE_EXTCODE)/images/corner.png \
                  $(SAGE_EXTCODE)/images/evaluate.png \
                  $(SAGE_EXTCODE)/images/evaluate_over.png \
                  $(SAGE_EXTCODE)/images/favicon.ico \
                  $(SAGE_EXTCODE)/images/sagelogo.png \
                  $(SAGE_EXTCODE)/magma/latex/latex.m \
                  $(SAGE_EXTCODE)/magma/latex/latex.spec \
                  $(SAGE_EXTCODE)/magma/sage/basic.m \
                  $(SAGE_EXTCODE)/magma/sage/sage.spec \
                  $(SAGE_EXTCODE)/magma/spec \
                  $(SAGE_EXTCODE)/mwrank/PRIMES \
                  $(SAGE_EXTCODE)/notebook-ipython/logo-64x64.png \
                  $(SAGE_EXTCODE)/notebook-ipython/logo.svg \
                  $(SAGE_EXTCODE)/pari/buzzard/DimensionSk.g \
                  $(SAGE_EXTCODE)/pari/buzzard/genusn.g \
                  $(SAGE_EXTCODE)/pari/buzzard/Tpprog.g \
                  $(SAGE_EXTCODE)/pari/dokchitser/computel.gp \
                  $(SAGE_EXTCODE)/pari/dokchitser/ex-bsw \
                  $(SAGE_EXTCODE)/pari/dokchitser/ex-chgen \
                  $(SAGE_EXTCODE)/pari/dokchitser/ex-chqua \
                  $(SAGE_EXTCODE)/pari/dokchitser/ex-delta \
                  $(SAGE_EXTCODE)/pari/dokchitser/ex-eisen \
                  $(SAGE_EXTCODE)/pari/dokchitser/ex-gen2 \
                  $(SAGE_EXTCODE)/pari/dokchitser/ex-gen3 \
                  $(SAGE_EXTCODE)/pari/dokchitser/ex-gen4 \
                  $(SAGE_EXTCODE)/pari/dokchitser/ex-nf \
                  $(SAGE_EXTCODE)/pari/dokchitser/ex-shin \
                  $(SAGE_EXTCODE)/pari/dokchitser/ex-tau2 \
                  $(SAGE_EXTCODE)/pari/dokchitser/ex-zeta \
                  $(SAGE_EXTCODE)/pari/dokchitser/ex-zeta2 \
                  $(SAGE_EXTCODE)/pari/dokchitser/testall \
                  $(SAGE_EXTCODE)/pari/simon/ell.gp \
                  $(SAGE_EXTCODE)/pari/simon/ellcommon.gp \
                  $(SAGE_EXTCODE)/pari/simon/ellQ.gp \
                  $(SAGE_EXTCODE)/pari/simon/qfsolve.gp \
                  $(SAGE_EXTCODE)/pari/simon/resultant3.gp \
                  $(SAGE_EXTCODE)/pickle_jar/pickle_jar.tar.bz2 \
                  $(SAGE_EXTCODE)/texlive/package-list.txt \
                  $(SAGE_EXTCODE)/texlive/SPKG.txt \
                  $(SAGE_EXTCODE)/texlive/texlive-install \
                  $(SAGE_EXTCODE)/valgrind/pyalloc.supp \
                  $(SAGE_EXTCODE)/valgrind/sage-additional.supp \
                  $(SAGE_EXTCODE)/valgrind/sage.supp \


#==============================================================================
# What follows now is a copy of
#   /Users/rudi/Documents/Development/sage-6.7/build/deps
#==============================================================================

###############################################################################
# This file ($SAGE_ROOT/build/deps) will be copied into
# $SAGE_ROOT/build/Makefile by $SAGE_ROOT/build/install
###############################################################################

# Do not put an explicit path for sage-spkg here, it will be found in $PATH.
SAGE_SPKG = sage-spkg -f
PIPE = $(SAGE_ROOT)/build/pipestatus
STARTED = $(SAGE_LOCAL)/etc/sage-started.txt

# Tell make not to look for files with these names:
.PHONY: all all-sage all-toolchain all-build start \
	base toolchain toolchain-deps sagelib \
	doc doc-html doc-html-jsmath doc-html-mathjax doc-pdf \
	doc-clean clean lib-clean build-clean

# Build everything and start Sage.
# Note that we put the "doc" target first in the rule below because
# the doc build takes the most time and should be started as soon as
# possible.
all: all-toolchain
	$(MAKE) doc all-sage
	$(MAKE) '$(STARTED)'

# Build everything except the documentation
all-build: all-toolchain
	$(MAKE) all-sage


# Make the 4 preliminary build phases:
# prereq, base, toolchain, toolchain-deps.
# During the toolchain build, we export SAGE_BUILD_TOOLCHAIN=yes
# such that packages can do different things when they are built
# as prerequisite of GCC.
all-toolchain:
	$(MAKE) $(INST)/prereq
	$(MAKE) base
	env SAGE_BUILD_TOOLCHAIN=yes $(MAKE) toolchain
	$(MAKE) toolchain-deps

# All targets except for the base packages
all-sage: \
		sagelib \
		$(STANDARD_PACKAGES) \
		$(OPTIONAL_INSTALLED_PACKAGES) \
		$(EXTCODE) \
		$(SCRIPTS)

# TOOLCHAIN consists of dependencies determined by build/install,
# including for example the GCC package.
toolchain: $(TOOLCHAIN)

# Build all packages that GCC links against serially, otherwise this
# leads to race conditions where some library which is used by GCC gets
# reinstalled. Since system GCCs might use Sage's libraries, we do this
# unconditionally. We still use the dependency checking from $(MAKE),
# so this will not trigger useless rebuilds.
# See #14168 and #14232.
toolchain-deps:
	$(MAKE) $(INST)/$(ZLIB)
	$(MAKE) $(INST)/$(SAGE_MP_LIBRARY)
	$(MAKE) $(INST)/$(MPFR)
	$(MAKE) $(INST)/$(MPC)
	$(MAKE) $(INST)/$(PPL)

# Everything needed to start up Sage using "./sage".  Of course, not
# every part of Sage will work.  It does not include Maxima for example.
SAGERUNTIME = sagelib $(SCRIPTS) $(INST)/$(IPYTHON) $(INST)/$(PEXPECT)


# Start Sage at least once to check that it works
# (i.e. when we just installed Sage for the first time).
start: all-build
	$(MAKE) '$(STARTED)'

# We make this depend on all standard packages because running
# sage-starts runs sage-location, which should be run after installing
# any package.
$(STARTED): $(STANDARD_PACKES)
	"$(SAGE_LOCAL)/bin/sage-starts"


###############################################################################
# Building the base system
#
# This consists of packages which are required for the Sage build system.
###############################################################################
base: $(INST)/$(BZIP2) $(INST)/$(PATCH) $(INST)/$(PKGCONF)

$(INST)/prereq: ../configure
	@cd ..; rm -f config.log; ln -s logs/pkgs/config.log config.log; \
	./configure $$PREREQ_OPTIONS || ( \
		if [ "x$$SAGE_PORT" = x ]; then \
			echo "If you would like to try to build Sage anyway (to help porting),"; \
			echo "export the variable 'SAGE_PORT' to something non-empty."; \
			exit 1; \
		else \
			echo "Since 'SAGE_PORT' is set, we will try to build anyway."; \
		fi; )
	touch $@

###############################################################################
# Building normal packages
###############################################################################

# List all *build-time* dependencies of the Sage library.  These are,
# on the one hand, programs needed for the build/install process of the
# Sage library (e.g. CYTHON, JINJA2), and on the other hand all
# dependencies for Cython files (e.g. PARI, NTL, SAGE_MP_LIBRARY).
sagelib: \
		$(INST)/$(ATLAS) \
		$(INST)/$(CEPHES) \
		$(INST)/$(CLIQUER) \
		$(INST)/$(CYTHON) \
		$(INST)/$(ECL) \
		$(INST)/$(ECLIB) \
		$(INST)/$(ECM) \
		$(INST)/$(FLINT) \
		$(INST)/$(LIBFPLLL) \
		$(INST)/$(LIBGD) \
		$(INST)/$(GIVARO) \
		$(INST)/$(GLPK) \
		$(INST)/$(GSL) \
		$(INST)/$(IML) \
		$(INST)/$(JINJA2) \
		$(INST)/$(LCALC) \
		$(INST)/$(LRCALC) \
		$(INST)/$(LIBGAP) \
		$(INST)/$(LIBPNG) \
		$(INST)/$(LINBOX) \
		$(INST)/$(M4RI) \
		$(INST)/$(M4RIE) \
		$(INST)/$(MPC) \
		$(INST)/$(MPFI) \
		$(INST)/$(MPFR) \
		$(INST)/$(SAGE_MP_LIBRARY) \
		$(INST)/$(NTL) \
		$(INST)/$(NUMPY) \
		$(INST)/$(PARI) \
		$(INST)/$(PLANARITY) \
		$(INST)/$(POLYBORI) \
		$(INST)/$(PPL) \
		$(INST)/$(PYNAC) \
		$(INST)/$(PYTHON) \
		$(INST)/$(RATPOINTS) \
		$(INST)/$(READLINE) \
		$(INST)/$(RW) \
		$(INST)/$(SINGULAR) \
		$(INST)/$(SIX) \
		$(INST)/$(SYMMETRICA) \
		$(INST)/$(ZN_POLY)
	if [ -z "$$SAGE_INSTALL_FETCH_ONLY" ]; then \
		cd $(SAGE_SRC) && source bin/sage-env && \
		$(PIPE) 'time $(MAKE) sage 2>&1' 'tee -a $(SAGE_LOGS)/sage-$(SAGE_VERSION).log'; \
	fi


###############################################################################
# Building scripts and extcode
###############################################################################

# Don't just use "install" since we don't want to change permissions
$(SAGE_LOCAL)/bin/%: $(SAGE_SRC)/bin/%
	cp $< $@

# Don't just use "install -D" since we don't want to change permissions.
# cp won't correctly setup the SAGE_EXTCODE directory structure
# (unlike install), so we need a mkdir here such that cp can copy into
# an existing folder.
$(SAGE_EXTCODE)/%: $(SAGE_SRC)/ext/%
	@mkdir -p "$(@D)"
	cp $< $@


###############################################################################
# Building the documentation
###############################################################################

# You can choose to have the built HTML version of the documentation link to
# the PDF version. To do so, you need to build both the HTML and PDF versions.
# To have the HTML version link to the PDF version, do
#
# $ ./sage --docbuild all html
# $ ./sage --docbuild all pdf
#
# For more information on the docbuild utility, do
#
# $ ./sage --docbuild -H

# Building the documentation has many dependencies, because all
# documented modules are imported and because we use matplotlib to
# produce plots.
DOC_DEPENDENCIES = sagelib $(INST)/$(SPHINX) $(INST)/$(SAGENB) \
	| $(SAGERUNTIME) $(INST)/$(MAXIMA) $(INST)/$(NETWORKX) \
	$(INST)/$(SCIPY) $(INST)/$(MATPLOTLIB) $(INST)/$(PILLOW) \
	$(INST)/$(MATHJAX)

doc: doc-html

doc-html: $(DOC_DEPENDENCIES)
	cd .. && $(PIPE) "./sage --docbuild --no-pdf-links all html $(SAGE_DOCBUILD_OPTS) 2>&1" "tee -a logs/dochtml.log"

# 'doc-html-no-plot': build docs without building the graphics coming
# from the '.. plot' directive, in case you want to save a few
# megabytes of disk space. 'doc-clean' is a prerequisite because the
# presence of graphics is cached in src/doc/output.
doc-html-no-plot: doc-clean $(DOC_DEPENDENCIES)
	cd .. && $(PIPE) "./sage --docbuild --no-pdf-links --no-plot all html $(SAGE_DOCBUILD_OPTS) 2>&1" "tee -a logs/dochtml.log"

doc-html-mathjax: $(DOC_DEPENDENCIES)
	cd .. && $(PIPE) "./sage --docbuild --no-pdf-links all html -j $(SAGE_DOCBUILD_OPTS) 2>&1" "tee -a logs/dochtml.log"

# Keep target 'doc-html-jsmath' for backwards compatibility.
doc-html-jsmath: doc-html-mathjax

doc-pdf: $(DOC_DEPENDENCIES)
	cd .. && $(PIPE) "./sage --docbuild all pdf $(SAGE_DOCBUILD_OPTS) 2>&1" "tee -a logs/docpdf.log"

doc-clean:
	cd "$(SAGE_SRC)/doc" && $(MAKE) clean


###############################################################################
# Cleaning up
###############################################################################

clean:
	@echo "Deleting package build directories..."
	rm -rf "$(SAGE_LOCAL)/var/tmp/sage/build"

lib-clean:
	cd "$(SAGE_SRC)" && $(MAKE) clean

build-clean: clean doc-clean lib-clean

#==============================================================================
# Rules generated from pkgs/<package>/dependencies files
#==============================================================================

$(INST)/4ti2-1.6.5:
	+$(PIPE) "$(SAGE_SPKG) $(FOURTI2) 2>&1" "tee -a $(SAGE_LOGS)/$(FOURTI2).log"

4ti2: $(INST)/$(FOURTI2)

$(INST)/arb-2.6.0: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(ARB) 2>&1" "tee -a $(SAGE_LOGS)/$(ARB).log"

arb: $(INST)/$(ARB)

$(INST)/atlas-3.10.2: | $(INST)/$(PYTHON)
	+$(PIPE) "$(SAGE_SPKG) $(ATLAS) 2>&1" "tee -a $(SAGE_LOGS)/$(ATLAS).log"

atlas: $(INST)/$(ATLAS)

$(INST)/autotools-20141105:
	+$(PIPE) "$(SAGE_SPKG) $(AUTOTOOLS) 2>&1" "tee -a $(SAGE_LOGS)/$(AUTOTOOLS).log"

autotools: $(INST)/$(AUTOTOOLS)

$(INST)/backports_ssl_match_hostname-3.4.0.2: $(INST)/$(PYTHON) $(INST)/$(SETUPTOOLS)
	+$(PIPE) "$(SAGE_SPKG) $(BACKPORTS_SSL_MATCH_HOSTNAME) 2>&1" "tee -a $(SAGE_LOGS)/$(BACKPORTS_SSL_MATCH_HOSTNAME).log"

backports_ssl_match_hostname: $(INST)/$(BACKPORTS_SSL_MATCH_HOSTNAME)

$(INST)/benzene-20130630: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(BENZENE) 2>&1" "tee -a $(SAGE_LOGS)/$(BENZENE).log"

benzene: $(INST)/$(BENZENE)

$(INST)/bliss-0.72.p1: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(BLISS) 2>&1" "tee -a $(SAGE_LOGS)/$(BLISS).log"

bliss: $(INST)/$(BLISS)

$(INST)/boehm_gc-7.2d.p0:
	+$(PIPE) "$(SAGE_SPKG) $(BOEHM_GC) 2>&1" "tee -a $(SAGE_LOGS)/$(BOEHM_GC).log"

boehm_gc: $(INST)/$(BOEHM_GC)

$(INST)/boost_cropped-1.52.0:
	+$(PIPE) "$(SAGE_SPKG) $(BOOST_CROPPED) 2>&1" "tee -a $(SAGE_LOGS)/$(BOOST_CROPPED).log"

boost_cropped: $(INST)/$(BOOST_CROPPED)

$(INST)/buckygen-1.0: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(BUCKYGEN) 2>&1" "tee -a $(SAGE_LOGS)/$(BUCKYGEN).log"

buckygen: $(INST)/$(BUCKYGEN)

$(INST)/bzip2-1.0.6.20140317: $(INST)/$(PKGCONF)
	+$(PIPE) "$(SAGE_SPKG) $(BZIP2) 2>&1" "tee -a $(SAGE_LOGS)/$(BZIP2).log"

bzip2: $(INST)/$(BZIP2)

$(INST)/cbc-2.9.4: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(CBC) 2>&1" "tee -a $(SAGE_LOGS)/$(CBC).log"

cbc: $(INST)/$(CBC)

$(INST)/ccache-3.2.2: $(INST)/$(ZLIB)
	+$(PIPE) "$(SAGE_SPKG) $(CCACHE) 2>&1" "tee -a $(SAGE_LOGS)/$(CCACHE).log"

ccache: $(INST)/$(CCACHE)

$(INST)/cddlib-094g.p0: $(INST)/$(SAGE_MP_LIBRARY)
	+$(PIPE) "$(SAGE_SPKG) $(CDDLIB) 2>&1" "tee -a $(SAGE_LOGS)/$(CDDLIB).log"

cddlib: $(INST)/$(CDDLIB)

$(INST)/cephes-2.8.p1:
	+$(PIPE) "$(SAGE_SPKG) $(CEPHES) 2>&1" "tee -a $(SAGE_LOGS)/$(CEPHES).log"

cephes: $(INST)/$(CEPHES)

$(INST)/certifi-14.05.14: $(INST)/$(PYTHON) $(INST)/$(SETUPTOOLS)
	+$(PIPE) "$(SAGE_SPKG) $(CERTIFI) 2>&1" "tee -a $(SAGE_LOGS)/$(CERTIFI).log"

certifi: $(INST)/$(CERTIFI)

$(INST)/cliquer-1.21.p2:
	+$(PIPE) "$(SAGE_SPKG) $(CLIQUER) 2>&1" "tee -a $(SAGE_LOGS)/$(CLIQUER).log"

cliquer: $(INST)/$(CLIQUER)

$(INST)/combinatorial_designs-20140630:
	+$(PIPE) "$(SAGE_SPKG) $(COMBINATORIAL_DESIGNS) 2>&1" "tee -a $(SAGE_LOGS)/$(COMBINATORIAL_DESIGNS).log"

combinatorial_designs: $(INST)/$(COMBINATORIAL_DESIGNS)

$(INST)/compilerwrapper-1.2:
	+$(PIPE) "$(SAGE_SPKG) $(COMPILERWRAPPER) 2>&1" "tee -a $(SAGE_LOGS)/$(COMPILERWRAPPER).log"

compilerwrapper: $(INST)/$(COMPILERWRAPPER)

$(INST)/configure-102:
	+$(PIPE) "$(SAGE_SPKG) $(CONFIGURE) 2>&1" "tee -a $(SAGE_LOGS)/$(CONFIGURE).log"

configure: $(INST)/$(CONFIGURE)

$(INST)/conway_polynomials-0.4.p0: | $(SAGERUNTIME)
	+$(PIPE) "$(SAGE_SPKG) $(CONWAY_POLYNOMIALS) 2>&1" "tee -a $(SAGE_LOGS)/$(CONWAY_POLYNOMIALS).log"

conway_polynomials: $(INST)/$(CONWAY_POLYNOMIALS)

$(INST)/cryptominisat-2.9.6: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(CRYPTOMINISAT) 2>&1" "tee -a $(SAGE_LOGS)/$(CRYPTOMINISAT).log"

cryptominisat: $(INST)/$(CRYPTOMINISAT)

$(INST)/csdp-6.2:
	+$(PIPE) "$(SAGE_SPKG) $(CSDP) 2>&1" "tee -a $(SAGE_LOGS)/$(CSDP).log"

csdp: $(INST)/$(CSDP)

$(INST)/cvxopt-1.1.7: $(INST)/$(NUMPY) $(INST)/$(ATLAS) $(INST)/$(CEPHES) $(INST)/$(GSL) $(INST)/$(GLPK) | $(INST)/$(MATPLOTLIB)
	+$(PIPE) "$(SAGE_SPKG) $(CVXOPT) 2>&1" "tee -a $(SAGE_LOGS)/$(CVXOPT).log"

cvxopt: $(INST)/$(CVXOPT)

$(INST)/cython-0.22.p5: $(INST)/$(PYTHON) $(INST)/$(SETUPTOOLS)
	+$(PIPE) "$(SAGE_SPKG) $(CYTHON) 2>&1" "tee -a $(SAGE_LOGS)/$(CYTHON).log"

cython: $(INST)/$(CYTHON)

$(INST)/d3js-3.4.8: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(D3JS) 2>&1" "tee -a $(SAGE_LOGS)/$(D3JS).log"

d3js: $(INST)/$(D3JS)

$(INST)/database_cremona_ellcurve-20150519: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(DATABASE_CREMONA_ELLCURVE) 2>&1" "tee -a $(SAGE_LOGS)/$(DATABASE_CREMONA_ELLCURVE).log"

database_cremona_ellcurve: $(INST)/$(DATABASE_CREMONA_ELLCURVE)

$(INST)/database_gap-4.7.8: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(DATABASE_GAP) 2>&1" "tee -a $(SAGE_LOGS)/$(DATABASE_GAP).log"

database_gap: $(INST)/$(DATABASE_GAP)

$(INST)/database_odlyzko_zeta-20061209: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(DATABASE_ODLYZKO_ZETA) 2>&1" "tee -a $(SAGE_LOGS)/$(DATABASE_ODLYZKO_ZETA).log"

database_odlyzko_zeta: $(INST)/$(DATABASE_ODLYZKO_ZETA)

$(INST)/database_pari-20140908: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(DATABASE_PARI) 2>&1" "tee -a $(SAGE_LOGS)/$(DATABASE_PARI).log"

database_pari: $(INST)/$(DATABASE_PARI)

$(INST)/database_stein_watkins-20110713: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(DATABASE_STEIN_WATKINS) 2>&1" "tee -a $(SAGE_LOGS)/$(DATABASE_STEIN_WATKINS).log"

database_stein_watkins: $(INST)/$(DATABASE_STEIN_WATKINS)

$(INST)/database_stein_watkins_mini-20070827: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(DATABASE_STEIN_WATKINS_MINI) 2>&1" "tee -a $(SAGE_LOGS)/$(DATABASE_STEIN_WATKINS_MINI).log"

database_stein_watkins_mini: $(INST)/$(DATABASE_STEIN_WATKINS_MINI)

$(INST)/database_symbolic_data-20070206: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(DATABASE_SYMBOLIC_DATA) 2>&1" "tee -a $(SAGE_LOGS)/$(DATABASE_SYMBOLIC_DATA).log"

database_symbolic_data: $(INST)/$(DATABASE_SYMBOLIC_DATA)

$(INST)/dateutil-2.2: $(INST)/$(PYTHON) $(INST)/$(SIX) $(INST)/$(SETUPTOOLS)
	+$(PIPE) "$(SAGE_SPKG) $(DATEUTIL) 2>&1" "tee -a $(SAGE_LOGS)/$(DATEUTIL).log"

dateutil: $(INST)/$(DATEUTIL)

$(INST)/docutils-0.12: $(INST)/$(PYTHON)
	+$(PIPE) "$(SAGE_SPKG) $(DOCUTILS) 2>&1" "tee -a $(SAGE_LOGS)/$(DOCUTILS).log"

docutils: $(INST)/$(DOCUTILS)

$(INST)/dot2tex-2.9.0.p0: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(DOT2TEX) 2>&1" "tee -a $(SAGE_LOGS)/$(DOT2TEX).log"

dot2tex: $(INST)/$(DOT2TEX)

$(INST)/ecl-13.5.1.p0: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(READLINE) $(INST)/$(BOEHM_GC)
	+$(PIPE) "$(SAGE_SPKG) $(ECL) 2>&1" "tee -a $(SAGE_LOGS)/$(ECL).log"

ecl: $(INST)/$(ECL)

$(INST)/eclib-20150510: $(INST)/$(PARI) $(INST)/$(NTL) $(INST)/$(FLINT)
	+$(PIPE) "$(SAGE_SPKG) $(ECLIB) 2>&1" "tee -a $(SAGE_LOGS)/$(ECLIB).log"

eclib: $(INST)/$(ECLIB)

$(INST)/ecm-6.4.4: $(INST)/$(SAGE_MP_LIBRARY)
	+$(PIPE) "$(SAGE_SPKG) $(ECM) 2>&1" "tee -a $(SAGE_LOGS)/$(ECM).log"

ecm: $(INST)/$(ECM)

$(INST)/elliptic_curves-0.7: | $(INST)/$(SQLITE) $(INST)/$(PYTHON)
	+$(PIPE) "$(SAGE_SPKG) $(ELLIPTIC_CURVES) 2>&1" "tee -a $(SAGE_LOGS)/$(ELLIPTIC_CURVES).log"

elliptic_curves: $(INST)/$(ELLIPTIC_CURVES)

$(INST)/fflas_ffpack-1.6.0.p1: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(GIVARO) $(INST)/$(GSL) $(INST)/$(ATLAS)
	+$(PIPE) "$(SAGE_SPKG) $(FFLAS_FFPACK) 2>&1" "tee -a $(SAGE_LOGS)/$(FFLAS_FFPACK).log"

fflas_ffpack: $(INST)/$(FFLAS_FFPACK)

$(INST)/flint-2.4.5: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(MPFR) $(INST)/$(NTL)
	+$(PIPE) "$(SAGE_SPKG) $(FLINT) 2>&1" "tee -a $(SAGE_LOGS)/$(FLINT).log"

flint: $(INST)/$(FLINT)

$(INST)/flintqs-20070817.p8: $(INST)/$(SAGE_MP_LIBRARY)
	+$(PIPE) "$(SAGE_SPKG) $(FLINTQS) 2>&1" "tee -a $(SAGE_LOGS)/$(FLINTQS).log"

flintqs: $(INST)/$(FLINTQS)

$(INST)/freetype-2.5.2.p1: $(INST)/$(LIBPNG)
	+$(PIPE) "$(SAGE_SPKG) $(FREETYPE) 2>&1" "tee -a $(SAGE_LOGS)/$(FREETYPE).log"

freetype: $(INST)/$(FREETYPE)

$(INST)/fricas-1.2.4:
	+$(PIPE) "$(SAGE_SPKG) $(FRICAS) 2>&1" "tee -a $(SAGE_LOGS)/$(FRICAS).log"

fricas: $(INST)/$(FRICAS)

$(INST)/gambit-14.1.0: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(GAMBIT) 2>&1" "tee -a $(SAGE_LOGS)/$(GAMBIT).log"

gambit: $(INST)/$(GAMBIT)

$(INST)/gap-4.7.8: $(INST)/$(NCURSES) $(INST)/$(READLINE) $(INST)/$(SAGE_MP_LIBRARY)
	+$(PIPE) "$(SAGE_SPKG) $(GAP) 2>&1" "tee -a $(SAGE_LOGS)/$(GAP).log"

gap: $(INST)/$(GAP)

$(INST)/gap_packages-4.7.8: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(GAP_PACKAGES) 2>&1" "tee -a $(SAGE_LOGS)/$(GAP_PACKAGES).log"

gap_packages: $(INST)/$(GAP_PACKAGES)

$(INST)/gcc-4.9.2.p1: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(MPFR) $(INST)/$(MPC) $(INST)/$(ZLIB)
	+$(PIPE) "$(SAGE_SPKG) $(GCC) 2>&1" "tee -a $(SAGE_LOGS)/$(GCC).log"

gcc: $(INST)/$(GCC)

$(INST)/gdb-7.8: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(GDB) 2>&1" "tee -a $(SAGE_LOGS)/$(GDB).log"

gdb: $(INST)/$(GDB)

$(INST)/gf2x-1.1.p1:
	+$(PIPE) "$(SAGE_SPKG) $(GF2X) 2>&1" "tee -a $(SAGE_LOGS)/$(GF2X).log"

gf2x: $(INST)/$(GF2X)

$(INST)/gfan-0.5.p0: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(CDDLIB)
	+$(PIPE) "$(SAGE_SPKG) $(GFAN) 2>&1" "tee -a $(SAGE_LOGS)/$(GFAN).log"

gfan: $(INST)/$(GFAN)

$(INST)/giac-1.2.0.13: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(GIAC) 2>&1" "tee -a $(SAGE_LOGS)/$(GIAC).log"

giac: $(INST)/$(GIAC)

$(INST)/giacpy-0.4.8: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(GIACPY) 2>&1" "tee -a $(SAGE_LOGS)/$(GIACPY).log"

giacpy: $(INST)/$(GIACPY)

$(INST)/git-2.3.0: $(INST)/$(ZLIB) $(INST)/$(PYTHON)
	+$(PIPE) "$(SAGE_SPKG) $(GIT) 2>&1" "tee -a $(SAGE_LOGS)/$(GIT).log"

git: $(INST)/$(GIT)

$(INST)/git_trac-20150522: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(GIT_TRAC) 2>&1" "tee -a $(SAGE_LOGS)/$(GIT_TRAC).log"

git_trac: $(INST)/$(GIT_TRAC)

$(INST)/givaro-3.7.1: $(INST)/$(SAGE_MP_LIBRARY)
	+$(PIPE) "$(SAGE_SPKG) $(GIVARO) 2>&1" "tee -a $(SAGE_LOGS)/$(GIVARO).log"

givaro: $(INST)/$(GIVARO)

$(INST)/glpk-4.55.p0: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(ZLIB)
	+$(PIPE) "$(SAGE_SPKG) $(GLPK) 2>&1" "tee -a $(SAGE_LOGS)/$(GLPK).log"

glpk: $(INST)/$(GLPK)

$(INST)/gmp-5.1.3: # no dependencies
	+$(PIPE) "$(SAGE_SPKG) $(GMP) 2>&1" "tee -a $(SAGE_LOGS)/$(GMP).log"

gmp: $(INST)/$(GMP)

$(INST)/graphs-20130920.p5:
	+$(PIPE) "$(SAGE_SPKG) $(GRAPHS) 2>&1" "tee -a $(SAGE_LOGS)/$(GRAPHS).log"

graphs: $(INST)/$(GRAPHS)

$(INST)/gsl-1.16: $(INST)/$(ATLAS)
	+$(PIPE) "$(SAGE_SPKG) $(GSL) 2>&1" "tee -a $(SAGE_LOGS)/$(GSL).log"

gsl: $(INST)/$(GSL)

$(INST)/iconv-1.14:
	+$(PIPE) "$(SAGE_SPKG) $(ICONV) 2>&1" "tee -a $(SAGE_LOGS)/$(ICONV).log"

iconv: $(INST)/$(ICONV)

$(INST)/iml-1.0.4p1: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(GSL) $(INST)/$(ATLAS)
	+$(PIPE) "$(SAGE_SPKG) $(IML) 2>&1" "tee -a $(SAGE_LOGS)/$(IML).log"

iml: $(INST)/$(IML)

$(INST)/ipython-3.2.0: $(INST)/$(PYTHON) $(INST)/$(JINJA2) $(INST)/$(TORNADO) $(INST)/$(PYZMQ)
	+$(PIPE) "$(SAGE_SPKG) $(IPYTHON) 2>&1" "tee -a $(SAGE_LOGS)/$(IPYTHON).log"

ipython: $(INST)/$(IPYTHON)

$(INST)/jinja2-2.7.3: $(INST)/$(MARKUPSAFE) $(INST)/$(SETUPTOOLS) $(INST)/$(DOCUTILS)
	+$(PIPE) "$(SAGE_SPKG) $(JINJA2) 2>&1" "tee -a $(SAGE_LOGS)/$(JINJA2).log"

jinja2: $(INST)/$(JINJA2)

$(INST)/jmol-14.2.11_2015.01.20: 
	+$(PIPE) "$(SAGE_SPKG) $(JMOL) 2>&1" "tee -a $(SAGE_LOGS)/$(JMOL).log"

jmol: $(INST)/$(JMOL)

$(INST)/jsonschema-2.4.0: $(INST)/$(PYTHON) $(INST)/$(SETUPTOOLS)
	+$(PIPE) "$(SAGE_SPKG) $(JSONSCHEMA) 2>&1" "tee -a $(SAGE_LOGS)/$(JSONSCHEMA).log"

jsonschema: $(INST)/$(JSONSCHEMA)

$(INST)/latte_int-1.7.3:
	+$(PIPE) "$(SAGE_SPKG) $(LATTE_INT) 2>&1" "tee -a $(SAGE_LOGS)/$(LATTE_INT).log"

latte_int: $(INST)/$(LATTE_INT)

$(INST)/lcalc-1.23.p14: $(INST)/$(PARI) $(INST)/$(MPFR)
	+$(PIPE) "$(SAGE_SPKG) $(LCALC) 2>&1" "tee -a $(SAGE_LOGS)/$(LCALC).log"

lcalc: $(INST)/$(LCALC)

$(INST)/libfplll-4.0.4: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(MPFR)
	+$(PIPE) "$(SAGE_SPKG) $(LIBFPLLL) 2>&1" "tee -a $(SAGE_LOGS)/$(LIBFPLLL).log"

libfplll: $(INST)/$(LIBFPLLL)

$(INST)/libgap-4.7.8: $(INST)/$(GAP)
	+$(PIPE) "$(SAGE_SPKG) $(LIBGAP) 2>&1" "tee -a $(SAGE_LOGS)/$(LIBGAP).log"

libgap: $(INST)/$(LIBGAP)

$(INST)/libgd-2.1.1.p0: $(INST)/$(LIBPNG) $(INST)/$(FREETYPE) $(INST)/$(ICONV)
	+$(PIPE) "$(SAGE_SPKG) $(LIBGD) 2>&1" "tee -a $(SAGE_LOGS)/$(LIBGD).log"

libgd: $(INST)/$(LIBGD)

$(INST)/libogg-1.3.1: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(LIBOGG) 2>&1" "tee -a $(SAGE_LOGS)/$(LIBOGG).log"

libogg: $(INST)/$(LIBOGG)

$(INST)/libpng-1.2.51.p0: $(INST)/$(ZLIB)
	+$(PIPE) "$(SAGE_SPKG) $(LIBPNG) 2>&1" "tee -a $(SAGE_LOGS)/$(LIBPNG).log"

libpng: $(INST)/$(LIBPNG)

$(INST)/libtheora-1.1.1: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(LIBTHEORA) 2>&1" "tee -a $(SAGE_LOGS)/$(LIBTHEORA).log"

libtheora: $(INST)/$(LIBTHEORA)

$(INST)/lidia-2.3.0+latte-patches-2014-10-04: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(LIDIA) 2>&1" "tee -a $(SAGE_LOGS)/$(LIDIA).log"

lidia: $(INST)/$(LIDIA)

$(INST)/linbox-1.3.2.p1: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(NTL) $(INST)/$(GIVARO) $(INST)/$(MPFR) $(INST)/$(LIBFPLLL) $(INST)/$(IML) $(INST)/$(M4RI) $(INST)/$(M4RIE) $(INST)/$(FFLAS_FFPACK)
	+$(PIPE) "$(SAGE_SPKG) $(LINBOX) 2>&1" "tee -a $(SAGE_LOGS)/$(LINBOX).log"

linbox: $(INST)/$(LINBOX)

$(INST)/lrcalc-1.1.7:
	+$(PIPE) "$(SAGE_SPKG) $(LRCALC) 2>&1" "tee -a $(SAGE_LOGS)/$(LRCALC).log"

lrcalc: $(INST)/$(LRCALC)

$(INST)/lrslib-051: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(LRSLIB) 2>&1" "tee -a $(SAGE_LOGS)/$(LRSLIB).log"

lrslib: $(INST)/$(LRSLIB)

$(INST)/m4ri-20140914: $(INST)/$(LIBPNG)
	+$(PIPE) "$(SAGE_SPKG) $(M4RI) 2>&1" "tee -a $(SAGE_LOGS)/$(M4RI).log"

m4ri: $(INST)/$(M4RI)

$(INST)/m4rie-20140914: $(INST)/$(M4RI) $(INST)/$(GIVARO) $(INST)/$(NTL)
	+$(PIPE) "$(SAGE_SPKG) $(M4RIE) 2>&1" "tee -a $(SAGE_LOGS)/$(M4RIE).log"

m4rie: $(INST)/$(M4RIE)

$(INST)/markupsafe-0.23: $(INST)/$(PYTHON) $(INST)/$(SETUPTOOLS)
	+$(PIPE) "$(SAGE_SPKG) $(MARKUPSAFE) 2>&1" "tee -a $(SAGE_LOGS)/$(MARKUPSAFE).log"

markupsafe: $(INST)/$(MARKUPSAFE)

$(INST)/mathjax-2.5:
	+$(PIPE) "$(SAGE_SPKG) $(MATHJAX) 2>&1" "tee -a $(SAGE_LOGS)/$(MATHJAX).log"

mathjax: $(INST)/$(MATHJAX)

$(INST)/matplotlib-1.4.3: $(INST)/$(PYTHON) $(INST)/$(NUMPY) $(INST)/$(FREETYPE) $(INST)/$(LIBPNG) $(INST)/$(DATEUTIL) $(INST)/$(PYPARSING) $(INST)/$(SETUPTOOLS) $(INST)/$(TORNADO) $(INST)/$(SIX)
	+$(PIPE) "$(SAGE_SPKG) $(MATPLOTLIB) 2>&1" "tee -a $(SAGE_LOGS)/$(MATPLOTLIB).log"

matplotlib: $(INST)/$(MATPLOTLIB)

$(INST)/maxima-5.35.1.p2: $(INST)/$(ECL)
	+$(PIPE) "$(SAGE_SPKG) $(MAXIMA) 2>&1" "tee -a $(SAGE_LOGS)/$(MAXIMA).log"

maxima: $(INST)/$(MAXIMA)

$(INST)/mcqd-1.0: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(MCQD) 2>&1" "tee -a $(SAGE_LOGS)/$(MCQD).log"

mcqd: $(INST)/$(MCQD)

$(INST)/mistune-0.5.1: $(INST)/$(SETUPTOOLS) $(INST)/$(CYTHON)
	+$(PIPE) "$(SAGE_SPKG) $(MISTUNE) 2>&1" "tee -a $(SAGE_LOGS)/$(MISTUNE).log"

mistune: $(INST)/$(MISTUNE)

$(INST)/modular_decomposition-20100607: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(MODULAR_DECOMPOSITION) 2>&1" "tee -a $(SAGE_LOGS)/$(MODULAR_DECOMPOSITION).log"

modular_decomposition: $(INST)/$(MODULAR_DECOMPOSITION)

$(INST)/mpc-1.0.2.p0: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(MPFR)
	+$(PIPE) "$(SAGE_SPKG) $(MPC) 2>&1" "tee -a $(SAGE_LOGS)/$(MPC).log"

mpc: $(INST)/$(MPC)

$(INST)/mpfi-1.5.1: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(MPFR)
	+$(PIPE) "$(SAGE_SPKG) $(MPFI) 2>&1" "tee -a $(SAGE_LOGS)/$(MPFI).log"

mpfi: $(INST)/$(MPFI)

$(INST)/mpfr-3.1.2.p0: $(INST)/$(SAGE_MP_LIBRARY)
	+$(PIPE) "$(SAGE_SPKG) $(MPFR) 2>&1" "tee -a $(SAGE_LOGS)/$(MPFR).log"

mpfr: $(INST)/$(MPFR)

$(INST)/mpir-2.7.0: # no dependencies
	+$(PIPE) "$(SAGE_SPKG) $(MPIR) 2>&1" "tee -a $(SAGE_LOGS)/$(MPIR).log"

mpir: $(INST)/$(MPIR)

$(INST)/mpmath-0.18: $(INST)/$(PYTHON)
	+$(PIPE) "$(SAGE_SPKG) $(MPMATH) 2>&1" "tee -a $(SAGE_LOGS)/$(MPMATH).log"

mpmath: $(INST)/$(MPMATH)

$(INST)/nauty-25r9: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(NAUTY) 2>&1" "tee -a $(SAGE_LOGS)/$(NAUTY).log"

nauty: $(INST)/$(NAUTY)

$(INST)/ncurses-5.9.20131221:
	+$(PIPE) "$(SAGE_SPKG) $(NCURSES) 2>&1" "tee -a $(SAGE_LOGS)/$(NCURSES).log"

ncurses: $(INST)/$(NCURSES)

$(INST)/networkx-1.8.1: $(INST)/$(PYTHON)
	+$(PIPE) "$(SAGE_SPKG) $(NETWORKX) 2>&1" "tee -a $(SAGE_LOGS)/$(NETWORKX).log"

networkx: $(INST)/$(NETWORKX)

$(INST)/normaliz-2.12.1.p0: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(NORMALIZ) 2>&1" "tee -a $(SAGE_LOGS)/$(NORMALIZ).log"

normaliz: $(INST)/$(NORMALIZ)

$(INST)/nose-1.3.3: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(NOSE) 2>&1" "tee -a $(SAGE_LOGS)/$(NOSE).log"

nose: $(INST)/$(NOSE)

$(INST)/ntl-9.2.0.p0: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(GF2X)
	+$(PIPE) "$(SAGE_SPKG) $(NTL) 2>&1" "tee -a $(SAGE_LOGS)/$(NTL).log"

ntl: $(INST)/$(NTL)

$(INST)/numpy-1.8.1.p0: $(INST)/$(PYTHON) $(INST)/$(ATLAS)
	+$(PIPE) "$(SAGE_SPKG) $(NUMPY) 2>&1" "tee -a $(SAGE_LOGS)/$(NUMPY).log"

numpy: $(INST)/$(NUMPY)

$(INST)/openssl-1.0.2c: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(OPENSSL) 2>&1" "tee -a $(SAGE_LOGS)/$(OPENSSL).log"

openssl: $(INST)/$(OPENSSL)

$(INST)/palp-2.1.p1:
	+$(PIPE) "$(SAGE_SPKG) $(PALP) 2>&1" "tee -a $(SAGE_LOGS)/$(PALP).log"

palp: $(INST)/$(PALP)

$(INST)/pari-2.8-1637-g489005a.p0: $(INST)/$(READLINE) $(INST)/$(SAGE_MP_LIBRARY) | $(INST)/$(PARI_GALDATA) $(INST)/$(PARI_SEADATA_SMALL)
	+$(PIPE) "$(SAGE_SPKG) $(PARI) 2>&1" "tee -a $(SAGE_LOGS)/$(PARI).log"

pari: $(INST)/$(PARI)

$(INST)/pari_galdata-20080411:
	+$(PIPE) "$(SAGE_SPKG) $(PARI_GALDATA) 2>&1" "tee -a $(SAGE_LOGS)/$(PARI_GALDATA).log"

pari_galdata: $(INST)/$(PARI_GALDATA)

$(INST)/pari_seadata_small-20090618:
	+$(PIPE) "$(SAGE_SPKG) $(PARI_SEADATA_SMALL) 2>&1" "tee -a $(SAGE_LOGS)/$(PARI_SEADATA_SMALL).log"

pari_seadata_small: $(INST)/$(PARI_SEADATA_SMALL)

$(INST)/patch-2.7.1:
	+$(PIPE) "$(SAGE_SPKG) $(PATCH) 2>&1" "tee -a $(SAGE_LOGS)/$(PATCH).log"

patch: $(INST)/$(PATCH)

$(INST)/pexpect-2.0.p6: $(INST)/$(PYTHON)
	+$(PIPE) "$(SAGE_SPKG) $(PEXPECT) 2>&1" "tee -a $(SAGE_LOGS)/$(PEXPECT).log"

pexpect: $(INST)/$(PEXPECT)

$(INST)/pillow-2.2.2: $(INST)/$(PYTHON) $(INST)/$(SETUPTOOLS)
	+$(PIPE) "$(SAGE_SPKG) $(PILLOW) 2>&1" "tee -a $(SAGE_LOGS)/$(PILLOW).log"

pillow: $(INST)/$(PILLOW)

$(INST)/pip-6.1.1: $(INST)/$(PYTHON) $(INST)/$(SETUPTOOLS)
	+$(PIPE) "$(SAGE_SPKG) $(PIP) 2>&1" "tee -a $(SAGE_LOGS)/$(PIP).log"

pip: $(INST)/$(PIP)

$(INST)/pkgconf-0.9.7: $(INST)/$(PATCH)
	+$(PIPE) "$(SAGE_SPKG) $(PKGCONF) 2>&1" "tee -a $(SAGE_LOGS)/$(PKGCONF).log"

pkgconf: $(INST)/$(PKGCONF)

$(INST)/pkgconfig-1.1.0: $(INST)/$(PYTHON) $(INST)/$(SETUPTOOLS)
	+$(PIPE) "$(SAGE_SPKG) $(PKGCONFIG) 2>&1" "tee -a $(SAGE_LOGS)/$(PKGCONFIG).log"

pkgconfig: $(INST)/$(PKGCONFIG)

$(INST)/planarity-2.2.0:
	+$(PIPE) "$(SAGE_SPKG) $(PLANARITY) 2>&1" "tee -a $(SAGE_LOGS)/$(PLANARITY).log"

planarity: $(INST)/$(PLANARITY)

$(INST)/plantri-4.5: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(PLANTRI) 2>&1" "tee -a $(SAGE_LOGS)/$(PLANTRI).log"

plantri: $(INST)/$(PLANTRI)

$(INST)/polybori-0.8.3: $(INST)/$(PYTHON) $(INST)/$(IPYTHON) $(INST)/$(SCONS) $(INST)/$(BOOST_CROPPED) $(INST)/$(M4RI) $(INST)/$(LIBGD)
	+$(PIPE) "$(SAGE_SPKG) $(POLYBORI) 2>&1" "tee -a $(SAGE_LOGS)/$(POLYBORI).log"

polybori: $(INST)/$(POLYBORI)

$(INST)/polytopes_db-20120220:
	+$(PIPE) "$(SAGE_SPKG) $(POLYTOPES_DB) 2>&1" "tee -a $(SAGE_LOGS)/$(POLYTOPES_DB).log"

polytopes_db: $(INST)/$(POLYTOPES_DB)

$(INST)/ppl-1.1: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(GLPK)
	+$(PIPE) "$(SAGE_SPKG) $(PPL) 2>&1" "tee -a $(SAGE_LOGS)/$(PPL).log"

ppl: $(INST)/$(PPL)

$(INST)/pycrypto-2.6.1.p0: $(INST)/$(PYTHON)
	+$(PIPE) "$(SAGE_SPKG) $(PYCRYPTO) 2>&1" "tee -a $(SAGE_LOGS)/$(PYCRYPTO).log"

pycrypto: $(INST)/$(PYCRYPTO)

$(INST)/pygments-2.0.2.p0: $(INST)/$(PYTHON) $(INST)/$(SETUPTOOLS)
	+$(PIPE) "$(SAGE_SPKG) $(PYGMENTS) 2>&1" "tee -a $(SAGE_LOGS)/$(PYGMENTS).log"

pygments: $(INST)/$(PYGMENTS)

$(INST)/pynac-0.3.9.1: $(INST)/$(PYTHON)
	+$(PIPE) "$(SAGE_SPKG) $(PYNAC) 2>&1" "tee -a $(SAGE_LOGS)/$(PYNAC).log"

pynac: $(INST)/$(PYNAC)

$(INST)/pyparsing-2.0.1: $(INST)/$(PYTHON)
	+$(PIPE) "$(SAGE_SPKG) $(PYPARSING) 2>&1" "tee -a $(SAGE_LOGS)/$(PYPARSING).log"

pyparsing: $(INST)/$(PYPARSING)

$(INST)/python2-2.7.9: $(INST)/$(ZLIB) $(INST)/$(READLINE) $(INST)/$(SQLITE) $(INST)/$(LIBPNG) | $(INST)/$(BZIP2)
	+$(PIPE) "$(SAGE_SPKG) $(PYTHON2) 2>&1" "tee -a $(SAGE_LOGS)/$(PYTHON2).log"

python2: $(INST)/$(PYTHON2)

$(INST)/python3-3.4.3: $(INST)/$(ZLIB) $(INST)/$(READLINE) $(INST)/$(SQLITE) $(INST)/$(LIBPNG) | $(INST)/$(BZIP2)
	+$(PIPE) "$(SAGE_SPKG) $(PYTHON3) 2>&1" "tee -a $(SAGE_LOGS)/$(PYTHON3).log"

python3: $(INST)/$(PYTHON3)

$(INST)/pyzmq-14.3.0: $(INST)/$(PYTHON) $(INST)/$(ZEROMQ) $(INST)/$(SETUPTOOLS)
	+$(PIPE) "$(SAGE_SPKG) $(PYZMQ) 2>&1" "tee -a $(SAGE_LOGS)/$(PYZMQ).log"

pyzmq: $(INST)/$(PYZMQ)

$(INST)/r-3.2.1.p0: $(INST)/$(ATLAS) $(INST)/$(ICONV) $(INST)/$(READLINE)
	+$(PIPE) "$(SAGE_SPKG) $(R) 2>&1" "tee -a $(SAGE_LOGS)/$(R).log"

r: $(INST)/$(R)

$(INST)/ratpoints-2.1.3.p3: $(INST)/$(SAGE_MP_LIBRARY)
	+$(PIPE) "$(SAGE_SPKG) $(RATPOINTS) 2>&1" "tee -a $(SAGE_LOGS)/$(RATPOINTS).log"

ratpoints: $(INST)/$(RATPOINTS)

$(INST)/readline-6.3.008: $(INST)/$(NCURSES)
	+$(PIPE) "$(SAGE_SPKG) $(READLINE) 2>&1" "tee -a $(SAGE_LOGS)/$(READLINE).log"

readline: $(INST)/$(READLINE)

$(INST)/rpy2-2.3.8: $(INST)/$(PYTHON) $(INST)/$(R)
	+$(PIPE) "$(SAGE_SPKG) $(RPY2) 2>&1" "tee -a $(SAGE_LOGS)/$(RPY2).log"

rpy2: $(INST)/$(RPY2)

$(INST)/rubiks-20070912.p18:
	+$(PIPE) "$(SAGE_SPKG) $(RUBIKS) 2>&1" "tee -a $(SAGE_LOGS)/$(RUBIKS).log"

rubiks: $(INST)/$(RUBIKS)

$(INST)/rw-0.7:
	+$(PIPE) "$(SAGE_SPKG) $(RW) 2>&1" "tee -a $(SAGE_LOGS)/$(RW).log"

rw: $(INST)/$(RW)

$(INST)/sage_mode-0.14: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(SAGE_MODE) 2>&1" "tee -a $(SAGE_LOGS)/$(SAGE_MODE).log"

sage_mode: $(INST)/$(SAGE_MODE)

$(INST)/sagenb-0.11.4: $(INST)/$(PYTHON) $(INST)/$(SETUPTOOLS) $(INST)/$(PEXPECT) $(INST)/$(JINJA2) $(INST)/$(SPHINX) $(INST)/$(DOCUTILS)
	+$(PIPE) "$(SAGE_SPKG) $(SAGENB) 2>&1" "tee -a $(SAGE_LOGS)/$(SAGENB).log"

sagenb: $(INST)/$(SAGENB)

$(INST)/sagetex-2.3.4: $(INST)/$(PYTHON) $(INST)/$(MAXIMA) $(INST)/$(SCIPY) $(INST)/$(MATPLOTLIB) $(INST)/$(PILLOW) $(INST)/$(TACHYON) | $(SAGERUNTIME)
	+$(PIPE) "$(SAGE_SPKG) $(SAGETEX) 2>&1" "tee -a $(SAGE_LOGS)/$(SAGETEX).log"

sagetex: $(INST)/$(SAGETEX)

$(INST)/scipy-0.14.0: $(INST)/$(ATLAS) $(INST)/$(NUMPY)
	+$(PIPE) "$(SAGE_SPKG) $(SCIPY) 2>&1" "tee -a $(SAGE_LOGS)/$(SCIPY).log"

scipy: $(INST)/$(SCIPY)

$(INST)/scons-1.2.0: $(INST)/$(PYTHON)
	+$(PIPE) "$(SAGE_SPKG) $(SCONS) 2>&1" "tee -a $(SAGE_LOGS)/$(SCONS).log"

scons: $(INST)/$(SCONS)

$(INST)/setuptools-12.4: $(INST)/$(PYTHON)
	+$(PIPE) "$(SAGE_SPKG) $(SETUPTOOLS) 2>&1" "tee -a $(SAGE_LOGS)/$(SETUPTOOLS).log"

setuptools: $(INST)/$(SETUPTOOLS)

$(INST)/singular-3.1.7p1.p0: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(NTL) $(INST)/$(FLINT) $(INST)/$(READLINE) $(INST)/$(MPFR)
	+$(PIPE) "$(SAGE_SPKG) $(SINGULAR) 2>&1" "tee -a $(SAGE_LOGS)/$(SINGULAR).log"

singular: $(INST)/$(SINGULAR)

$(INST)/six-1.9.0: $(INST)/$(PYTHON) $(INST)/$(SETUPTOOLS)
	+$(PIPE) "$(SAGE_SPKG) $(SIX) 2>&1" "tee -a $(SAGE_LOGS)/$(SIX).log"

six: $(INST)/$(SIX)

$(INST)/sphinx-1.2.2.p0: $(INST)/$(PYTHON) $(INST)/$(SETUPTOOLS) $(INST)/$(DOCUTILS) $(INST)/$(JINJA2) $(INST)/$(PYGMENTS)
	+$(PIPE) "$(SAGE_SPKG) $(SPHINX) 2>&1" "tee -a $(SAGE_LOGS)/$(SPHINX).log"

sphinx: $(INST)/$(SPHINX)

$(INST)/sqlite-3.8.4.3: $(INST)/$(READLINE)
	+$(PIPE) "$(SAGE_SPKG) $(SQLITE) 2>&1" "tee -a $(SAGE_LOGS)/$(SQLITE).log"

sqlite: $(INST)/$(SQLITE)

$(INST)/symmetrica-2.0.p9:
	+$(PIPE) "$(SAGE_SPKG) $(SYMMETRICA) 2>&1" "tee -a $(SAGE_LOGS)/$(SYMMETRICA).log"

symmetrica: $(INST)/$(SYMMETRICA)

$(INST)/sympow-1.018.1.p11:
	+$(PIPE) "$(SAGE_SPKG) $(SYMPOW) 2>&1" "tee -a $(SAGE_LOGS)/$(SYMPOW).log"

sympow: $(INST)/$(SYMPOW)

$(INST)/sympy-0.7.6: $(INST)/$(PYTHON) $(INST)/$(MPMATH)
	+$(PIPE) "$(SAGE_SPKG) $(SYMPY) 2>&1" "tee -a $(SAGE_LOGS)/$(SYMPY).log"

sympy: $(INST)/$(SYMPY)

$(INST)/tachyon-0.98.9.p5: $(INST)/$(LIBPNG)
	+$(PIPE) "$(SAGE_SPKG) $(TACHYON) 2>&1" "tee -a $(SAGE_LOGS)/$(TACHYON).log"

tachyon: $(INST)/$(TACHYON)

$(INST)/termcap-1.3.1.p3: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(TERMCAP) 2>&1" "tee -a $(SAGE_LOGS)/$(TERMCAP).log"

termcap: $(INST)/$(TERMCAP)

$(INST)/threejs-r70: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(THREEJS) 2>&1" "tee -a $(SAGE_LOGS)/$(THREEJS).log"

threejs: $(INST)/$(THREEJS)

$(INST)/tides-2.0: $(INST)/$(SAGE_MP_LIBRARY) $(INST)/$(MPFR)
	+$(PIPE) "$(SAGE_SPKG) $(TIDES) 2>&1" "tee -a $(SAGE_LOGS)/$(TIDES).log"

tides: $(INST)/$(TIDES)

$(INST)/topcom-0.17.4.p0: | $(STANDARD_PACKAGES)
	+$(PIPE) "$(SAGE_SPKG) $(TOPCOM) 2>&1" "tee -a $(SAGE_LOGS)/$(TOPCOM).log"

topcom: $(INST)/$(TOPCOM)

$(INST)/tornado-4.1: $(INST)/$(PYTHON) $(INST)/$(SETUPTOOLS) $(INST)/$(BACKPORTS_SSL_MATCH_HOSTNAME) $(INST)/$(CERTIFI)
	+$(PIPE) "$(SAGE_SPKG) $(TORNADO) 2>&1" "tee -a $(SAGE_LOGS)/$(TORNADO).log"

tornado: $(INST)/$(TORNADO)

$(INST)/valgrind-3.10.0:
	+$(PIPE) "$(SAGE_SPKG) $(VALGRIND) 2>&1" "tee -a $(SAGE_LOGS)/$(VALGRIND).log"

valgrind: $(INST)/$(VALGRIND)

$(INST)/zeromq-4.0.5:
	+$(PIPE) "$(SAGE_SPKG) $(ZEROMQ) 2>&1" "tee -a $(SAGE_LOGS)/$(ZEROMQ).log"

zeromq: $(INST)/$(ZEROMQ)

$(INST)/zlib-1.2.8.p0:
	+$(PIPE) "$(SAGE_SPKG) $(ZLIB) 2>&1" "tee -a $(SAGE_LOGS)/$(ZLIB).log"

zlib: $(INST)/$(ZLIB)

$(INST)/zn_poly-0.9.p11: $(INST)/$(SAGE_MP_LIBRARY) | $(INST)/$(PYTHON)
	+$(PIPE) "$(SAGE_SPKG) $(ZN_POLY) 2>&1" "tee -a $(SAGE_LOGS)/$(ZN_POLY).log"

zn_poly: $(INST)/$(ZN_POLY)

