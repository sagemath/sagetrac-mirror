name: CI Linux

## This GitHub Actions workflow runs SAGE_ROOT/tox.ini with select environments,
## whenever a GitHub pull request is opened or synchronized in a repository
## where GitHub Actions are enabled.
##
## It builds and checks some sage spkgs as defined in TARGETS.
##
## A job succeeds if there is no error.
##
## The build is run with "make V=0", so the build logs of individual packages are suppressed.
##
## At the end, all package build logs that contain an error are printed out.
##
## After all jobs have finished (or are canceled) and a short delay,
## tar files of all logs are made available as "build artifacts".

#on: [push, pull_request]

on:
  pull_request:
    types: [opened, synchronize]
  push:
    tags:
      - '*'
  workflow_dispatch:
    # Allow to run manually

env:
  TARGETS_PRE: all-sage-local
  TARGETS: build doc-html
  TARGETS_OPTIONAL: ptest

jobs:

  standard-pre:
    uses: ./.github/workflows/docker.yml
    with:
      # Build from scratch
      docker_targets: "with-system-packages configured with-targets-pre"
      # FIXME: duplicated from env.TARGETS
      targets_pre: all-sage-local
      tox_packages_factors: >-
          ["standard"]
      docker_push_repository: ghcr.io/${{ github.repository }}/

  standard:
    if: ${{ success() || failure() }}
    needs: [standard-pre]
    uses: ./.github/workflows/docker.yml
    with:
      # Build incrementally from previous stage (pre)
      incremental: true
      free_disk_space: true
      from_docker_repository: ghcr.io/${{ github.repository }}/
      from_docker_target: "with-targets-pre"
      docker_targets: "with-targets with-targets-optional"
      # FIXME: duplicated from env.TARGETS
      targets: build doc-html
      targets_optional: ptest
      tox_packages_factors: >-
          ["standard"]
      docker_push_repository: ghcr.io/${{ github.repository }}/

  minimal-pre:
    if: ${{ success() || failure() }}
    # It does not really "need" it.
    needs: [standard]
    uses: ./.github/workflows/docker.yml
    with:
      # Build from scratch
      docker_targets: "with-system-packages configured with-targets-pre"
      # FIXME: duplicated from env.TARGETS
      targets_pre: all-sage-local
      tox_packages_factors: >-
          ["minimal"]
      docker_push_repository: ghcr.io/${{ github.repository }}/

  minimal:
    if: ${{ success() || failure() }}
    needs: [minimal-pre]
    uses: ./.github/workflows/docker.yml
    with:
      # Build incrementally from previous stage (pre)
      incremental: true
      free_disk_space: true
      from_docker_repository: ghcr.io/${{ github.repository }}/
      from_docker_target: "with-targets-pre"
      docker_targets: "with-targets with-targets-optional"
      # FIXME: duplicated from env.TARGETS
      targets: build doc-html
      targets_optional: ptest
      tox_packages_factors: >-
          ["minimal"]
      docker_push_repository: ghcr.io/${{ github.repository }}/

  maximal-pre:
    if: ${{ success() || failure() }}
    needs: [minimal]
    uses: ./.github/workflows/docker.yml
    with:
      free_disk_space: true
      # Build from scratch
      docker_targets: "with-system-packages configured with-targets-pre"
      # FIXME: duplicated from env.TARGETS
      targets_pre: all-sage-local
      tox_packages_factors: >-
          ["maximal"]
      docker_push_repository: ghcr.io/${{ github.repository }}/

  optional-0-o:
    if: ${{ success() || failure() }}
    needs: [maximal-pre]
    uses: ./.github/workflows/docker.yml
    with:
      incremental: true
      free_disk_space: true
      from_docker_repository: ghcr.io/${{ github.repository }}/
      from_docker_target: "with-targets-pre"
      tox_packages_factors: >-
          ["maximal"]
      docker_targets: "with-targets-optional"
      targets_optional: '$(echo $(export PATH=build/bin:$PATH && sage-package list :optional: --has-file "spkg-install.in|spkg-install|requirements.txt" --no-file "huge|has_nonfree_dependencies" | grep -v sagemath_doc | grep ^[0-o]))'


  optional-p-z:
    if: ${{ success() || failure() }}
    needs: [optional-0-o]
    uses: ./.github/workflows/docker.yml
    with:
      incremental: true
      free_disk_space: true
      from_docker_repository: ghcr.io/${{ github.repository }}/
      from_docker_target: "with-targets-pre"
      tox_packages_factors: >-
          ["maximal"]
      docker_targets: "with-targets-optional"
      targets_optional: '$(echo $(export PATH=build/bin:$PATH && sage-package list :optional: --has-file "spkg-install.in|spkg-install|requirements.txt" --no-file "huge|has_nonfree_dependencies" | grep -v sagemath_doc | grep ^[p-z]))'

  experimental-0-o:
    if: ${{ success() || failure() }}
    needs: [optional-p-z]
    uses: ./.github/workflows/docker.yml
    with:
      incremental: true
      free_disk_space: true
      from_docker_repository: ghcr.io/${{ github.repository }}/
      from_docker_target: "with-targets-pre"
      tox_packages_factors: >-
          ["maximal"]
      docker_targets: "with-targets-optional"
      targets_optional: '$(echo $(export PATH=build/bin:$PATH && sage-package list :experimental: --has-file "spkg-install.in|spkg-install|requirements.txt" --no-file "huge|has_nonfree_dependencies" | grep -v sagemath_doc | grep ^[0-o]))'

  experimental-p-z:
    if: ${{ success() || failure() }}
    needs: [experimental-0-o]
    uses: ./.github/workflows/docker.yml
    with:
      incremental: true
      free_disk_space: true
      from_docker_repository: ghcr.io/${{ github.repository }}/
      from_docker_target: "with-targets-pre"
      tox_packages_factors: >-
          ["maximal"]
      docker_targets: "with-targets-optional"
      targets_optional: '$(echo $(export PATH=build/bin:$PATH && sage-package list :experimental: --has-file "spkg-install.in|spkg-install|requirements.txt" --no-file "huge|has_nonfree_dependencies" | grep -v sagemath_doc | grep ^[p-z]))'

  local-ubuntu:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        tox_system_factor: [conda-forge-ubuntu]
        tox_packages_factor: [minimal, standard, environment, environment-optional]
    env:
      TOX_ENV: local-${{ matrix.tox_system_factor }}-${{ matrix.tox_packages_factor }}
      LOGS_ARTIFACT_NAME: logs-commit-${{ github.sha }}-tox-local-${{ matrix.tox_system_factor }}-${{ matrix.tox_packages_factor }}
    steps:
      - uses: actions/checkout@v2
      - name: Install test prerequisites
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install tox
      - name: Build and test with tox
        # We use a high parallelization on purpose in order to catch possible parallelization bugs in the build scripts.
        # For doctesting, we use a lower parallelization to avoid timeouts.
        run: |
          MAKE="make -j12" tox -e $TOX_ENV -- SAGE_NUM_THREADS=4 $TARGETS
      - name: Prepare logs artifact
        run: |
          mkdir -p "artifacts/$LOGS_ARTIFACT_NAME"; cp -r .tox/*/log "artifacts/$LOGS_ARTIFACT_NAME"
        if: always()
      - uses: actions/upload-artifact@v1
        with:
          path: artifacts
          name: ${{ env.LOGS_ARTIFACT_NAME }}
        if: always()
      - name: Print out logs for immediate inspection
        # and markup the output with GitHub Actions logging commands
        run: |
          .github/workflows/scan-logs.sh "artifacts/$LOGS_ARTIFACT_NAME"
        if: always()
