# This file configures automatic builds of Sage on [CircleCI](https://circleci.com).
# To make the build time not too excessive, we seed the build cache with
# sagemath/sagemath-dev:latest. When basic SPKGs change, this does not help much
# and the full build might exceed CircleCI's limits for open source projcets (five
# hours on 2 vCPUs as of early 2018.)
# You might want to try to build locally or with GitLab CI, see
# `.gitlab-ci.yml` for more options.
# Note that we do not use workflows because it was not clear whether the docker
# images sizes would not exceed the size limits of CircleCI workspaces. Also,
# workflows would not make things faster. We do not get more machines for free
# and the frequent loading of docker images probably exceeds the cost of the
# actual tests.

version: 2
jobs:
  # As https://circleci.com/docs/2.0/docker-layer-caching/ is a paid feature,
  # we do build & test & release in one step.
  build:
    machine: true
    steps:
      - checkout
      - run:
          # The docker commands sometimes take a while to produce output
          no_output_timeout: 30m
          command: |
            # CircleCI has no mechanism to hide secret variables.
            # Therefore we roll our own to protect $SECRET_* variables.
            . .ci/protect-secrets.sh

            export DOCKER_TAG=${CIRCLE_TAG:-$CIRCLE_BRANCH}
            # Build docker images
            # TODO: Change this line to sagemath/sagemath-dev:latest
            export ARTIFACT_BASE=saraedum/sagemath-dev:gitlabci
            . .ci/build-docker.sh
            # Test that the images work
            . .ci/test-dev.sh $DOCKER_IMAGE_DEV
            . .ci/test-cli.sh $DOCKER_IMAGE_CLI
            . .ci/test-jupyter.sh $DOCKER_IMAGE_CLI localhost
            # Push docker images to dockerhub if a dockerhub user has been configured
            . .ci/push-dockerhub.sh sagemath-dev
            . .ci/push-dockerhub.sh sagemath
